

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jul 03 21:25:24 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Generated 12/10/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F886 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0000                     	;# 
    71     0001                     	;# 
    72     0002                     	;# 
    73     0003                     	;# 
    74     0004                     	;# 
    75     0005                     	;# 
    76     0006                     	;# 
    77     0007                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0089                     	;# 
   109     008C                     	;# 
   110     008D                     	;# 
   111     008E                     	;# 
   112     008F                     	;# 
   113     0090                     	;# 
   114     0091                     	;# 
   115     0092                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     009F                     	;# 
   131     0105                     	;# 
   132     0107                     	;# 
   133     0108                     	;# 
   134     0109                     	;# 
   135     010C                     	;# 
   136     010C                     	;# 
   137     010D                     	;# 
   138     010E                     	;# 
   139     010F                     	;# 
   140     0185                     	;# 
   141     0187                     	;# 
   142     0188                     	;# 
   143     0189                     	;# 
   144     018C                     	;# 
   145     018D                     	;# 
   146     0000                     	;# 
   147     0001                     	;# 
   148     0002                     	;# 
   149     0003                     	;# 
   150     0004                     	;# 
   151     0005                     	;# 
   152     0006                     	;# 
   153     0007                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     000E                     	;# 
   161     000F                     	;# 
   162     0010                     	;# 
   163     0011                     	;# 
   164     0012                     	;# 
   165     0013                     	;# 
   166     0014                     	;# 
   167     0015                     	;# 
   168     0015                     	;# 
   169     0016                     	;# 
   170     0017                     	;# 
   171     0018                     	;# 
   172     0019                     	;# 
   173     001A                     	;# 
   174     001B                     	;# 
   175     001B                     	;# 
   176     001C                     	;# 
   177     001D                     	;# 
   178     001E                     	;# 
   179     001F                     	;# 
   180     0081                     	;# 
   181     0085                     	;# 
   182     0086                     	;# 
   183     0087                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222                           
   223                           	psect	idataCOMMON
   224     0678                     __pidataCOMMON:
   225                           
   226                           ;initializer for get_key_combined@last_key_pressed
   227     0678  34FF               	retlw	255
   228                           
   229                           	psect	idataBANK0
   230     0604                     __pidataBANK0:
   231                           
   232                           ;initializer for main@F1381
   233     0604  3410               	retlw	16
   234     0605  340B               	retlw	11
   235     0606  340B               	retlw	11
   236     0607  340A               	retlw	10
   237                           
   238                           ;initializer for main@F1378
   239     0608  340E               	retlw	14
   240     0609  340A               	retlw	10
   241     060A  3412               	retlw	18
   242     060B  3400               	retlw	0
   243                           
   244                           ;initializer for main@F1375
   245     060C  340E               	retlw	14
   246     060D  3400               	retlw	0
   247     060E  3411               	retlw	17
   248     060F  3411               	retlw	17
   249                           
   250                           ;initializer for _display_digits
   251     0610  34FF               	retlw	255
   252     0611  34FF               	retlw	255
   253     0612  34FF               	retlw	255
   254     0613  34FF               	retlw	255
   255                           
   256                           ;initializer for _password
   257     0614  34FF               	retlw	255
   258     0615  34FF               	retlw	255
   259     0616  34FF               	retlw	255
   260     0617  34FF               	retlw	255
   261                           
   262                           ;initializer for _current_key_pressed
   263     0618  34FF               	retlw	255
   264                           
   265                           ;initializer for _key_pressed
   266     0619  34FF               	retlw	255
   267                           
   268                           	psect	idataBANK1
   269     066B                     __pidataBANK1:
   270                           
   271                           ;initializer for main@F1392
   272     066B  3410               	retlw	16
   273     066C  340B               	retlw	11
   274     066D  340B               	retlw	11
   275     066E  340A               	retlw	10
   276                           
   277                           ;initializer for main@F1389
   278     066F  340A               	retlw	10
   279     0670  3405               	retlw	5
   280     0671  340C               	retlw	12
   281     0672  340D               	retlw	13
   282                           
   283                           	psect	strings
   284     0599                     __pstrings:
   285     0599                     stringtab:
   286     0599                     __stringtab:
   287     0599                     stringcode:	
   288                           ;	String table - string pointers are 1 byte each
   289                           
   290     0599                     stringdir:
   291     0599  3005               	movlw	high stringdir
   292     059A  008A               	movwf	10
   293     059B  0804               	movf	4,w
   294     059C  0A84               	incf	4,f
   295     059D  0782               	addwf	2,f
   296     059E                     __stringbase:
   297     059E  3400               	retlw	0
   298     059F                     __end_of__stringtab:
   299     059F                     display_digit@segment_map:
   300     059F  343F               	retlw	63
   301     05A0  3406               	retlw	6
   302     05A1  345B               	retlw	91
   303     05A2  344F               	retlw	79
   304     05A3  3466               	retlw	102
   305     05A4  346D               	retlw	109
   306     05A5  347D               	retlw	125
   307     05A6  3407               	retlw	7
   308     05A7  347F               	retlw	127
   309     05A8  346F               	retlw	111
   310     05A9  3479               	retlw	121
   311     05AA  3450               	retlw	80
   312     05AB  3438               	retlw	56
   313     05AC  3458               	retlw	88
   314     05AD  3454               	retlw	84
   315     05AE  3440               	retlw	64
   316     05AF  345C               	retlw	92
   317     05B0  3400               	retlw	0
   318     05B1  3473               	retlw	115
   319     05B2                     __end_ofdisplay_digit@segment_map:
   320     05B2                     _key_map:
   321     05B2  3403               	retlw	3
   322     05B3  3402               	retlw	2
   323     05B4  3401               	retlw	1
   324     05B5  3406               	retlw	6
   325     05B6  3405               	retlw	5
   326     05B7  3404               	retlw	4
   327     05B8  3409               	retlw	9
   328     05B9  3408               	retlw	8
   329     05BA  3407               	retlw	7
   330     05BB  340F               	retlw	15
   331     05BC  3400               	retlw	0
   332     05BD  340E               	retlw	14
   333     05BE                     __end_of_key_map:
   334     05BE                     stepper_set@states:
   335     05BE  3401               	retlw	1
   336     05BF  3402               	retlw	2
   337     05C0  3404               	retlw	4
   338     05C1  3408               	retlw	8
   339     05C2                     __end_ofstepper_set@states:
   340     05C2                     main@hold_threshold:
   341     05C2  3464               	retlw	100
   342     05C3  3400               	retlw	0
   343     05C4                     __end_ofmain@hold_threshold:
   344     0001                     _TMR0	set	1
   345     0006                     _PORTB	set	6
   346     0007                     _PORTC	set	7
   347     0005                     _PORTA	set	5
   348     005A                     _TMR0IF	set	90
   349     005F                     _GIE	set	95
   350     005D                     _TMR0IE	set	93
   351     002C                     _RA4	set	44
   352     002D                     _RA5	set	45
   353     0037                     _RB7	set	55
   354     003F                     _RC7	set	63
   355     0081                     _OPTION_REGbits	set	129
   356     0086                     _TRISB	set	134
   357     0087                     _TRISC	set	135
   358     0085                     _TRISA	set	133
   359     042C                     _TRISA4	set	1068
   360     042D                     _TRISA5	set	1069
   361     0437                     _TRISB7	set	1079
   362     043F                     _TRISC7	set	1087
   363                           
   364                           	psect	cinit
   365     0013                     start_initialization:	
   366                           ; #config settings
   367                           
   368     0013                     __initialization:
   369                           
   370                           ; Initialize objects allocated to BANK1
   371     0013  1383               	bcf	3,7	;select IRP bank0
   372     0014  30A8               	movlw	low (__pdataBANK1+8)
   373     0015  00FD               	movwf	btemp+-1
   374     0016  3006               	movlw	high __pidataBANK1
   375     0017  00FE               	movwf	btemp
   376     0018  306B               	movlw	low __pidataBANK1
   377     0019  00FF               	movwf	btemp+1
   378     001A  30A0               	movlw	low __pdataBANK1
   379     001B  0084               	movwf	4
   380     001C  120A  118A  2633  120A  118A  	fcall	init_ram0
   381                           
   382                           ; Initialize objects allocated to BANK0
   383     0021  305F               	movlw	low (__pdataBANK0+22)
   384     0022  00FD               	movwf	btemp+-1
   385     0023  3006               	movlw	high __pidataBANK0
   386     0024  00FE               	movwf	btemp
   387     0025  3004               	movlw	low __pidataBANK0
   388     0026  00FF               	movwf	btemp+1
   389     0027  3049               	movlw	low __pdataBANK0
   390     0028  0084               	movwf	4
   391     0029  120A  118A  2633  120A  118A  	fcall	init_ram0
   392                           
   393                           ; Initialize objects allocated to COMMON
   394     002E  120A  118A  2678  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   395     0033  00FD               	movwf	__pdataCOMMON& (0+127)
   396                           
   397                           ; Clear objects allocated to BANK1
   398     0034  1683               	bsf	3,5	;RP0=1, select bank1
   399     0035  1303               	bcf	3,6	;RP1=0, select bank1
   400     0036  01A8               	clrf	__pbssBANK1& (0+127)
   401     0037  01A9               	clrf	(__pbssBANK1+1)& (0+127)
   402     0038  01AA               	clrf	(__pbssBANK1+2)& (0+127)
   403     0039  01AB               	clrf	(__pbssBANK1+3)& (0+127)
   404                           
   405                           ; Clear objects allocated to BANK0
   406     003A  1283               	bcf	3,5	;RP0=0, select bank0
   407     003B  1303               	bcf	3,6	;RP1=0, select bank0
   408     003C  01DF               	clrf	__pbssBANK0& (0+127)
   409     003D  01E0               	clrf	(__pbssBANK0+1)& (0+127)
   410     003E  01E1               	clrf	(__pbssBANK0+2)& (0+127)
   411     003F  01E2               	clrf	(__pbssBANK0+3)& (0+127)
   412     0040  01E3               	clrf	(__pbssBANK0+4)& (0+127)
   413     0041  01E4               	clrf	(__pbssBANK0+5)& (0+127)
   414     0042  01E5               	clrf	(__pbssBANK0+6)& (0+127)
   415     0043  01E6               	clrf	(__pbssBANK0+7)& (0+127)
   416     0044  01E7               	clrf	(__pbssBANK0+8)& (0+127)
   417     0045  01E8               	clrf	(__pbssBANK0+9)& (0+127)
   418     0046  01E9               	clrf	(__pbssBANK0+10)& (0+127)
   419     0047  01EA               	clrf	(__pbssBANK0+11)& (0+127)
   420     0048  01EB               	clrf	(__pbssBANK0+12)& (0+127)
   421     0049  01EC               	clrf	(__pbssBANK0+13)& (0+127)
   422                           
   423                           ; Clear objects allocated to COMMON
   424     004A  01FA               	clrf	__pbssCOMMON& (0+127)
   425     004B  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   426     004C  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   427     004D                     end_of_initialization:	
   428                           ;End of C runtime variable initialization code
   429                           
   430     004D                     __end_of__initialization:
   431     004D  0183               	clrf	3
   432     004E  120A  118A  2851   	ljmp	_main	;jump to C main() function
   433                           
   434                           	psect	bssCOMMON
   435     007A                     __pbssCOMMON:
   436     007A                     get_key_combined@debounce_state:
   437     007A                     	ds	1
   438     007B                     update_display@digit_position:
   439     007B                     	ds	1
   440     007C                     get_key_combined@row:
   441     007C                     	ds	1
   442                           
   443                           	psect	dataCOMMON
   444     007D                     __pdataCOMMON:
   445     007D                     get_key_combined@last_key_pressed:
   446     007D                     	ds	1
   447                           
   448                           	psect	bssBANK0
   449     005F                     __pbssBANK0:
   450     005F                     _user_input:
   451     005F                     	ds	4
   452     0063                     ISR@tick1:
   453     0063                     	ds	2
   454     0065                     stepper_set@i:
   455     0065                     	ds	2
   456     0067                     get_key_combined@debounce_counter:
   457     0067                     	ds	2
   458     0069                     _hold_counter:
   459     0069                     	ds	2
   460     006B                     _hold_flag2:
   461     006B                     	ds	1
   462     006C                     _key_ready:
   463     006C                     	ds	1
   464                           
   465                           	psect	dataBANK0
   466     0049                     __pdataBANK0:
   467     0049                     main@F1381:
   468     0049                     	ds	4
   469     004D                     main@F1378:
   470     004D                     	ds	4
   471     0051                     main@F1375:
   472     0051                     	ds	4
   473     0055                     _display_digits:
   474     0055                     	ds	4
   475     0059                     _password:
   476     0059                     	ds	4
   477     005D                     _current_key_pressed:
   478     005D                     	ds	1
   479     005E                     _key_pressed:
   480     005E                     	ds	1
   481                           
   482                           	psect	bssBANK1
   483     00A8                     __pbssBANK1:
   484     00A8                     main@F1386:
   485     00A8                     	ds	4
   486                           
   487                           	psect	dataBANK1
   488     00A0                     __pdataBANK1:
   489     00A0                     main@F1392:
   490     00A0                     	ds	4
   491     00A4                     main@F1389:
   492     00A4                     	ds	4
   493                           
   494                           	psect	inittext
   495     062F                     init_fetch0:	
   496                           ;	Called with low address in FSR and high address in W
   497                           
   498     062F  087E               	movf	btemp,w
   499     0630  008A               	movwf	10
   500     0631  087F               	movf	btemp+1,w
   501     0632  0082               	movwf	2
   502     0633                     init_ram0:	
   503                           ;Called with:
   504                           ;	high address of idata address in btemp 
   505                           ;	low address of idata address in btemp+1 
   506                           ;	low address of data in FSR
   507                           ;	high address + 1 of data in btemp-1
   508                           
   509     0633  120A  118A  262F  120A  118A  	fcall	init_fetch0
   510     0638  0080               	movwf	0
   511     0639  0A84               	incf	4,f
   512     063A  0804               	movf	4,w
   513     063B  067D               	xorwf	btemp+-1,w
   514     063C  1903               	btfsc	3,2
   515     063D  3400               	retlw	0
   516     063E  0AFF               	incf	btemp+1,f
   517     063F  1903               	btfsc	3,2
   518     0640  0AFE               	incf	btemp,f
   519     0641  2E33               	goto	init_ram0
   520                           
   521                           	psect	cstackCOMMON
   522     0070                     __pcstackCOMMON:
   523     0070                     ?_display_init:
   524     0070                     ?_display_digit:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?_update_display:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ?_clear_display:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ?_get_key_combined:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ?_capture_user_input_senha:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ?_verifica_senha:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ?_stepper_init:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_t0_init:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_ISR:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_main:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?___bmul:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     display_digit@position:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ___bmul@multiplicand:	
   561                           ; 1 bytes @ 0x0
   562                           
   563                           
   564                           ; 1 bytes @ 0x0
   565     0070                     	ds	1
   566     0071                     ??_display_digit:
   567     0071                     ??___bmul:	
   568                           ; 1 bytes @ 0x1
   569                           
   570     0071                     ___bmul@product:	
   571                           ; 1 bytes @ 0x1
   572                           
   573                           
   574                           ; 1 bytes @ 0x1
   575     0071                     	ds	1
   576     0072                     display_digit@segment_code:
   577     0072                     ___bmul@multiplier:	
   578                           ; 1 bytes @ 0x2
   579                           
   580                           
   581                           ; 1 bytes @ 0x2
   582     0072                     	ds	1
   583     0073                     ??_get_key_combined:
   584     0073                     display_digit@digit:	
   585                           ; 1 bytes @ 0x3
   586                           
   587                           
   588                           ; 1 bytes @ 0x3
   589     0073                     	ds	1
   590     0074                     ??_update_display:
   591     0074                     get_key_combined@current_key:	
   592                           ; 1 bytes @ 0x4
   593                           
   594                           
   595                           ; 1 bytes @ 0x4
   596     0074                     	ds	1
   597     0075                     get_key_combined@col:
   598                           
   599                           ; 1 bytes @ 0x5
   600     0075                     	ds	1
   601     0076                     ??_ISR:
   602                           
   603                           ; 1 bytes @ 0x6
   604     0076                     	ds	4
   605                           
   606                           	psect	cstackBANK0
   607     0020                     __pcstackBANK0:
   608     0020                     ??_display_init:
   609     0020                     ??_clear_display:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0020                     ?_display_message:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0020                     ??_capture_user_input_senha:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0020                     ??_verifica_senha:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0020                     ??_stepper_init:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0020                     ?_stepper_set:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0020                     ??_t0_init:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0020                     display_message@duration_ms:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0020                     stepper_set@steps:	
   634                           ; 2 bytes @ 0x0
   635                           
   636     0020                     capture_user_input_senha@senha:	
   637                           ; 2 bytes @ 0x0
   638                           
   639                           
   640                           ; 4 bytes @ 0x0
   641     0020                     	ds	1
   642     0021                     verifica_senha@senha:
   643                           
   644                           ; 4 bytes @ 0x1
   645     0021                     	ds	1
   646     0022                     ??_display_message:
   647     0022                     stepper_set@step_time:	
   648                           ; 1 bytes @ 0x2
   649                           
   650                           
   651                           ; 2 bytes @ 0x2
   652     0022                     	ds	2
   653     0024                     ??_stepper_set:
   654     0024                     capture_user_input_senha@senha_valida:	
   655                           ; 1 bytes @ 0x4
   656                           
   657     0024                     display_message@elapsed_time:	
   658                           ; 1 bytes @ 0x4
   659                           
   660                           
   661                           ; 2 bytes @ 0x4
   662     0024                     	ds	1
   663     0025                     capture_user_input_senha@index:
   664     0025                     verifica_senha@senha_valida:	
   665                           ; 1 bytes @ 0x5
   666                           
   667                           
   668                           ; 1 bytes @ 0x5
   669     0025                     	ds	1
   670     0026                     display_message@message:
   671     0026                     capture_user_input_senha@i:	
   672                           ; 1 bytes @ 0x6
   673                           
   674     0026                     verifica_senha@index:	
   675                           ; 1 bytes @ 0x6
   676                           
   677     0026                     _stepper_set$129:	
   678                           ; 1 bytes @ 0x6
   679                           
   680                           
   681                           ; 2 bytes @ 0x6
   682     0026                     	ds	1
   683     0027                     display_message@i:
   684     0027                     capture_user_input_senha@i_115:	
   685                           ; 1 bytes @ 0x7
   686                           
   687     0027                     verifica_senha@i:	
   688                           ; 1 bytes @ 0x7
   689                           
   690                           
   691                           ; 1 bytes @ 0x7
   692     0027                     	ds	1
   693     0028                     capture_user_input_senha@j:
   694     0028                     verifica_senha@i_122:	
   695                           ; 1 bytes @ 0x8
   696                           
   697     0028                     stepper_set@j:	
   698                           ; 1 bytes @ 0x8
   699                           
   700                           
   701                           ; 2 bytes @ 0x8
   702     0028                     	ds	1
   703     0029                     verifica_senha@j:
   704                           
   705                           ; 1 bytes @ 0x9
   706     0029                     	ds	1
   707     002A                     ??_main:
   708                           
   709                           ; 1 bytes @ 0xA
   710     002A                     	ds	3
   711     002D                     main@on:
   712                           
   713                           ; 4 bytes @ 0xD
   714     002D                     	ds	4
   715     0031                     main@Open:
   716                           
   717                           ; 4 bytes @ 0x11
   718     0031                     	ds	4
   719     0035                     main@error:
   720                           
   721                           ; 4 bytes @ 0x15
   722     0035                     	ds	4
   723     0039                     main@inicio:
   724                           
   725                           ; 4 bytes @ 0x19
   726     0039                     	ds	4
   727     003D                     main@cLSE:
   728                           
   729                           ; 4 bytes @ 0x1D
   730     003D                     	ds	4
   731     0041                     main@erro:
   732                           
   733                           ; 4 bytes @ 0x21
   734     0041                     	ds	4
   735     0045                     main@senha_valida:
   736                           
   737                           ; 1 bytes @ 0x25
   738     0045                     	ds	1
   739     0046                     main@senha_valida_169:
   740                           
   741                           ; 1 bytes @ 0x26
   742     0046                     	ds	1
   743     0047                     main@hold_flag1:
   744                           
   745                           ; 1 bytes @ 0x27
   746     0047                     	ds	1
   747     0048                     main@timeout:
   748                           
   749                           ; 1 bytes @ 0x28
   750     0048                     	ds	1
   751                           
   752                           	psect	maintext
   753     0051                     __pmaintext:	
   754 ;;
   755 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   756 ;;
   757 ;; *************** function _main *****************
   758 ;; Defined at:
   759 ;;		line 430 in file "main.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  erro            4   33[BANK0 ] unsigned char [4]
   764 ;;  cLSE            4   29[BANK0 ] unsigned char [4]
   765 ;;  error           4   21[BANK0 ] unsigned char [4]
   766 ;;  Open            4   17[BANK0 ] unsigned char [4]
   767 ;;  senha_valida    1   38[BANK0 ] unsigned char 
   768 ;;  inicio          4   25[BANK0 ] unsigned char [4]
   769 ;;  senha_valida    1   37[BANK0 ] unsigned char 
   770 ;;  on              4   13[BANK0 ] unsigned char [4]
   771 ;;  timeout         1   40[BANK0 ] unsigned char 
   772 ;;  hold_flag1      1   39[BANK0 ] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : B00/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         0      28       0       0       0
   784 ;;      Temps:          0       3       0       0       0
   785 ;;      Totals:         0      31       0       0       0
   786 ;;Total ram usage:       31 bytes
   787 ;; Hardware stack levels required when called: 6
   788 ;; This function calls:
   789 ;;		_capture_user_input_senha
   790 ;;		_clear_display
   791 ;;		_display_init
   792 ;;		_display_message
   793 ;;		_stepper_init
   794 ;;		_stepper_set
   795 ;;		_t0_init
   796 ;;		_verifica_senha
   797 ;; This function is called by:
   798 ;;		Startup code after reset
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802     0051                     _main:	
   803                           ;psect for function _main
   804                           
   805     0051                     l1733:	
   806                           ;incstack = 0
   807                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   808                           
   809                           
   810                           ;main.c: 433: display_init();
   811     0051  120A  118A  2642  120A  118A  	fcall	_display_init
   812     0056                     l1735:
   813                           
   814                           ;main.c: 436: t0_init();
   815     0056  120A  118A  2651  120A  118A  	fcall	_t0_init
   816     005B                     l1737:
   817                           
   818                           ;main.c: 439: stepper_init();
   819     005B  120A  118A  265E  120A  118A  	fcall	_stepper_init
   820     0060                     l1739:
   821                           
   822                           ;main.c: 442: const unsigned int hold_threshold = 100;;main.c: 443: unsigned char hold_f
      +                          lag1 = 0;
   823     0060  1283               	bcf	3,5	;RP0=0, select bank0
   824     0061  1303               	bcf	3,6	;RP1=0, select bank0
   825     0062  01C7               	clrf	main@hold_flag1
   826     0063                     l1741:
   827     0063                     l1743:
   828                           
   829                           ;main.c: 448: clear_display();
   830     0063  120A  118A  2673  120A  118A  	fcall	_clear_display
   831                           
   832                           ;main.c: 450: while (key_ready) {
   833     0068  2A9E               	goto	l1901
   834     0069                     l1745:
   835                           
   836                           ;main.c: 451: timeout =0;
   837     0069  01C8               	clrf	main@timeout
   838     006A                     l1747:
   839                           
   840                           ;main.c: 454: if (current_key_pressed == 0x0E) {
   841     006A  300E               	movlw	14
   842     006B  065D               	xorwf	_current_key_pressed,w	;volatile
   843     006C  1D03               	btfss	3,2
   844     006D  286F               	goto	u1301
   845     006E  2870               	goto	u1300
   846     006F                     u1301:
   847     006F  2A9E               	goto	l1901
   848     0070                     u1300:
   849     0070                     l1749:
   850                           
   851                           ;main.c: 456: hold_counter = 0;
   852     0070  01E9               	clrf	_hold_counter	;volatile
   853     0071  01EA               	clrf	_hold_counter+1	;volatile
   854     0072                     l1751:
   855                           
   856                           ;main.c: 459: if( hold_flag2 != 3){
   857     0072  3003               	movlw	3
   858     0073  066B               	xorwf	_hold_flag2,w	;volatile
   859     0074  1903               	btfsc	3,2
   860     0075  2877               	goto	u1311
   861     0076  2878               	goto	u1310
   862     0077                     u1311:
   863     0077  28A5               	goto	l1767
   864     0078                     u1310:
   865     0078                     l1753:
   866                           
   867                           ;main.c: 460: hold_flag1 = 1;
   868     0078  01C7               	clrf	main@hold_flag1
   869     0079  0AC7               	incf	main@hold_flag1,f
   870     007A  28A5               	goto	l1767
   871     007B                     l1755:
   872                           
   873                           ;main.c: 465: _delay((unsigned long)((50)*(20000000/4000.0)));
   874     007B  3002               	movlw	2
   875     007C  1283               	bcf	3,5	;RP0=0, select bank0
   876     007D  1303               	bcf	3,6	;RP1=0, select bank0
   877     007E  00AC               	movwf	??_main+2
   878     007F  3045               	movlw	69
   879     0080  00AB               	movwf	??_main+1
   880     0081  30A9               	movlw	169
   881     0082  00AA               	movwf	??_main
   882     0083                     u1517:
   883     0083  0BAA               	decfsz	??_main,f
   884     0084  2883               	goto	u1517
   885     0085  0BAB               	decfsz	??_main+1,f
   886     0086  2883               	goto	u1517
   887     0087  0BAC               	decfsz	??_main+2,f
   888     0088  2883               	goto	u1517
   889                           
   890                           ;main.c: 467: if (hold_counter >= hold_threshold) {
   891     0089  3000               	movlw	0
   892     008A  1283               	bcf	3,5	;RP0=0, select bank0
   893     008B  1303               	bcf	3,6	;RP1=0, select bank0
   894     008C  026A               	subwf	_hold_counter+1,w	;volatile
   895     008D  3064               	movlw	100
   896     008E  1903               	skipnz
   897     008F  0269               	subwf	_hold_counter,w	;volatile
   898     0090  1C03               	skipc
   899     0091  2893               	goto	u1321
   900     0092  2894               	goto	u1320
   901     0093                     u1321:
   902     0093  289D               	goto	l1763
   903     0094                     u1320:
   904     0094                     l1757:
   905                           
   906                           ;main.c: 468: hold_flag1 = 0;
   907     0094  01C7               	clrf	main@hold_flag1
   908     0095                     l1759:
   909                           
   910                           ;main.c: 469: if(hold_flag2 != 3){
   911     0095  3003               	movlw	3
   912     0096  066B               	xorwf	_hold_flag2,w	;volatile
   913     0097  1903               	btfsc	3,2
   914     0098  289A               	goto	u1331
   915     0099  289B               	goto	u1330
   916     009A                     u1331:
   917     009A  289D               	goto	l1763
   918     009B                     u1330:
   919     009B                     l1761:
   920                           
   921                           ;main.c: 470: hold_flag2 = 1;
   922     009B  3001               	movlw	1
   923     009C  00EB               	movwf	_hold_flag2	;volatile
   924     009D                     l1763:
   925                           
   926                           ;main.c: 472: };main.c: 473: };main.c: 475: if (current_key_pressed != 0x0E) {
   927     009D  300E               	movlw	14
   928     009E  065D               	xorwf	_current_key_pressed,w	;volatile
   929     009F  1903               	btfsc	3,2
   930     00A0  28A2               	goto	u1341
   931     00A1  28A3               	goto	u1340
   932     00A2                     u1341:
   933     00A2  28A5               	goto	l1767
   934     00A3                     u1340:
   935     00A3                     l1765:
   936                           
   937                           ;main.c: 476: hold_flag1 = 0;
   938     00A3  01C7               	clrf	main@hold_flag1
   939                           
   940                           ;main.c: 477: break;
   941     00A4  28AA               	goto	l1769
   942     00A5                     l1767:
   943     00A5  0347               	decf	main@hold_flag1,w
   944     00A6  1903               	btfsc	3,2
   945     00A7  28A9               	goto	u1351
   946     00A8  28AA               	goto	u1350
   947     00A9                     u1351:
   948     00A9  287B               	goto	l1755
   949     00AA                     u1350:
   950     00AA                     l1769:
   951                           
   952                           ;main.c: 478: };main.c: 479: };main.c: 484: hold_counter = 0;
   953     00AA  01E9               	clrf	_hold_counter	;volatile
   954     00AB  01EA               	clrf	_hold_counter+1	;volatile
   955                           
   956                           ;main.c: 485: while (hold_flag2 == 3 && hold_counter < 6000) {
   957     00AC  2984               	goto	l1831
   958     00AD                     l1771:
   959                           
   960                           ;main.c: 487: clear_display();
   961     00AD  120A  118A  2673  120A  118A  	fcall	_clear_display
   962     00B2                     l1773:
   963                           
   964                           ;main.c: 488: _delay((unsigned long)((50)*(20000000/4000.0)));
   965     00B2  3002               	movlw	2
   966     00B3  1283               	bcf	3,5	;RP0=0, select bank0
   967     00B4  1303               	bcf	3,6	;RP1=0, select bank0
   968     00B5  00AC               	movwf	??_main+2
   969     00B6  3045               	movlw	69
   970     00B7  00AB               	movwf	??_main+1
   971     00B8  30A9               	movlw	169
   972     00B9  00AA               	movwf	??_main
   973     00BA                     u1527:
   974     00BA  0BAA               	decfsz	??_main,f
   975     00BB  28BA               	goto	u1527
   976     00BC  0BAB               	decfsz	??_main+1,f
   977     00BD  28BA               	goto	u1527
   978     00BE  0BAC               	decfsz	??_main+2,f
   979     00BF  28BA               	goto	u1527
   980     00C0                     l1775:
   981                           
   982                           ;main.c: 490: key_ready =0;
   983     00C0  1283               	bcf	3,5	;RP0=0, select bank0
   984     00C1  1303               	bcf	3,6	;RP1=0, select bank0
   985     00C2  01EC               	clrf	_key_ready	;volatile
   986     00C3                     l1777:
   987                           
   988                           ;main.c: 491: _delay((unsigned long)((10)*(20000000/4000.0)));
   989     00C3  3041               	movlw	65
   990     00C4  1283               	bcf	3,5	;RP0=0, select bank0
   991     00C5  1303               	bcf	3,6	;RP1=0, select bank0
   992     00C6  00AB               	movwf	??_main+1
   993     00C7  30ED               	movlw	237
   994     00C8  00AA               	movwf	??_main
   995     00C9                     u1537:
   996     00C9  0BAA               	decfsz	??_main,f
   997     00CA  28C9               	goto	u1537
   998     00CB  0BAB               	decfsz	??_main+1,f
   999     00CC  28C9               	goto	u1537
  1000     00CD  28CE               	nop2
  1001                           
  1002                           ;main.c: 493: while(!key_ready && hold_counter < 6000){
  1003     00CE  28F6               	goto	l1789
  1004     00CF                     l1779:
  1005                           
  1006                           ;main.c: 495: unsigned char on[4] = {14, 0, 17 , 17};
  1007     00CF  0854               	movf	main@F1375+3,w
  1008     00D0  00B0               	movwf	main@on+3
  1009     00D1  0853               	movf	main@F1375+2,w
  1010     00D2  00AF               	movwf	main@on+2
  1011     00D3  0852               	movf	main@F1375+1,w
  1012     00D4  00AE               	movwf	main@on+1
  1013     00D5  0851               	movf	main@F1375,w
  1014     00D6  00AD               	movwf	main@on
  1015     00D7                     l1781:
  1016                           
  1017                           ;main.c: 496: display_message(on,500);
  1018     00D7  30F4               	movlw	244
  1019     00D8  00A0               	movwf	display_message@duration_ms
  1020     00D9  3001               	movlw	1
  1021     00DA  00A1               	movwf	display_message@duration_ms+1
  1022     00DB  302D               	movlw	(low (main@on| 0))& (0+255)
  1023     00DC  120A  118A  2523  120A  118A  	fcall	_display_message
  1024     00E1                     l1783:
  1025                           
  1026                           ;main.c: 497: if (hold_counter >= 600){
  1027     00E1  3002               	movlw	2
  1028     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1029     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1030     00E4  026A               	subwf	_hold_counter+1,w	;volatile
  1031     00E5  3058               	movlw	88
  1032     00E6  1903               	skipnz
  1033     00E7  0269               	subwf	_hold_counter,w	;volatile
  1034     00E8  1C03               	skipc
  1035     00E9  28EB               	goto	u1361
  1036     00EA  28EC               	goto	u1360
  1037     00EB                     u1361:
  1038     00EB  28F6               	goto	l1789
  1039     00EC                     u1360:
  1040     00EC                     l1785:
  1041                           
  1042                           ;main.c: 498: clear_display();
  1043     00EC  120A  118A  2673  120A  118A  	fcall	_clear_display
  1044     00F1                     l1787:
  1045                           
  1046                           ;main.c: 499: timeout = 1;
  1047     00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1048     00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1049     00F3  01C8               	clrf	main@timeout
  1050     00F4  0AC8               	incf	main@timeout,f
  1051                           
  1052                           ;main.c: 500: break;
  1053     00F5  2906               	goto	l1793
  1054     00F6                     l1789:
  1055     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1056     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1057     00F8  086C               	movf	_key_ready,w	;volatile
  1058     00F9  1D03               	btfss	3,2
  1059     00FA  28FC               	goto	u1371
  1060     00FB  28FD               	goto	u1370
  1061     00FC                     u1371:
  1062     00FC  2906               	goto	l1793
  1063     00FD                     u1370:
  1064     00FD                     l1791:
  1065     00FD  3017               	movlw	23
  1066     00FE  026A               	subwf	_hold_counter+1,w	;volatile
  1067     00FF  3070               	movlw	112
  1068     0100  1903               	skipnz
  1069     0101  0269               	subwf	_hold_counter,w	;volatile
  1070     0102  1C03               	skipc
  1071     0103  2905               	goto	u1381
  1072     0104  2906               	goto	u1380
  1073     0105                     u1381:
  1074     0105  28CF               	goto	l1779
  1075     0106                     u1380:
  1076     0106                     l1793:
  1077                           
  1078                           ;main.c: 501: };main.c: 503: };main.c: 506: if(!timeout){
  1079     0106  0848               	movf	main@timeout,w
  1080     0107  1D03               	btfss	3,2
  1081     0108  290A               	goto	u1391
  1082     0109  290B               	goto	u1390
  1083     010A                     u1391:
  1084     010A  2984               	goto	l1831
  1085     010B                     u1390:
  1086     010B                     l1795:
  1087                           
  1088                           ;main.c: 508: unsigned char senha_valida = verifica_senha();
  1089     010B  120A  118A  249D  120A  118A  	fcall	_verifica_senha
  1090     0110  1283               	bcf	3,5	;RP0=0, select bank0
  1091     0111  1303               	bcf	3,6	;RP1=0, select bank0
  1092     0112  00C5               	movwf	main@senha_valida
  1093     0113                     l1797:
  1094                           
  1095                           ;main.c: 509: clear_display();
  1096     0113  120A  118A  2673  120A  118A  	fcall	_clear_display
  1097     0118                     l1799:
  1098                           
  1099                           ;main.c: 512: if (senha_valida) {
  1100     0118  1283               	bcf	3,5	;RP0=0, select bank0
  1101     0119  1303               	bcf	3,6	;RP1=0, select bank0
  1102     011A  0845               	movf	main@senha_valida,w
  1103     011B  1903               	btfsc	3,2
  1104     011C  291E               	goto	u1401
  1105     011D  291F               	goto	u1400
  1106     011E                     u1401:
  1107     011E  2959               	goto	l1817
  1108     011F                     u1400:
  1109     011F                     l1801:
  1110                           
  1111                           ;main.c: 513: stepper_set(-4,500);
  1112     011F  30FC               	movlw	252
  1113     0120  00A0               	movwf	stepper_set@steps
  1114     0121  30FF               	movlw	255
  1115     0122  00A1               	movwf	stepper_set@steps+1
  1116     0123  30F4               	movlw	244
  1117     0124  00A2               	movwf	stepper_set@step_time
  1118     0125  3001               	movlw	1
  1119     0126  00A3               	movwf	stepper_set@step_time+1
  1120     0127  120A  118A  22A9  120A  118A  	fcall	_stepper_set
  1121     012C                     l1803:
  1122                           
  1123                           ;main.c: 514: unsigned char Open[4] = {14, 10, 18, 0};
  1124     012C  1283               	bcf	3,5	;RP0=0, select bank0
  1125     012D  1303               	bcf	3,6	;RP1=0, select bank0
  1126     012E  0850               	movf	main@F1378+3,w
  1127     012F  00B4               	movwf	main@Open+3
  1128     0130  084F               	movf	main@F1378+2,w
  1129     0131  00B3               	movwf	main@Open+2
  1130     0132  084E               	movf	main@F1378+1,w
  1131     0133  00B2               	movwf	main@Open+1
  1132     0134  084D               	movf	main@F1378,w
  1133     0135  00B1               	movwf	main@Open
  1134     0136                     l1805:
  1135                           
  1136                           ;main.c: 515: display_message(Open, 2000);
  1137     0136  30D0               	movlw	208
  1138     0137  00A0               	movwf	display_message@duration_ms
  1139     0138  3007               	movlw	7
  1140     0139  00A1               	movwf	display_message@duration_ms+1
  1141     013A  3031               	movlw	(low (main@Open| 0))& (0+255)
  1142     013B  120A  118A  2523  120A  118A  	fcall	_display_message
  1143     0140                     l1807:
  1144                           
  1145                           ;main.c: 516: clear_display();
  1146     0140  120A  118A  2673  120A  118A  	fcall	_clear_display
  1147     0145                     l1809:
  1148                           
  1149                           ;main.c: 517: _delay((unsigned long)((100)*(20000000/4000.0)));
  1150     0145  3003               	movlw	3
  1151     0146  1283               	bcf	3,5	;RP0=0, select bank0
  1152     0147  1303               	bcf	3,6	;RP1=0, select bank0
  1153     0148  00AC               	movwf	??_main+2
  1154     0149  308A               	movlw	138
  1155     014A  00AB               	movwf	??_main+1
  1156     014B  3055               	movlw	85
  1157     014C  00AA               	movwf	??_main
  1158     014D                     u1547:
  1159     014D  0BAA               	decfsz	??_main,f
  1160     014E  294D               	goto	u1547
  1161     014F  0BAB               	decfsz	??_main+1,f
  1162     0150  294D               	goto	u1547
  1163     0151  0BAC               	decfsz	??_main+2,f
  1164     0152  294D               	goto	u1547
  1165     0153                     l1811:
  1166                           
  1167                           ;main.c: 519: key_ready = 0;
  1168     0153  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0154  1303               	bcf	3,6	;RP1=0, select bank0
  1170     0155  01EC               	clrf	_key_ready	;volatile
  1171     0156                     l1813:
  1172                           
  1173                           ;main.c: 520: key_pressed = 0xFF;
  1174     0156  30FF               	movlw	255
  1175     0157  00DE               	movwf	_key_pressed	;volatile
  1176                           
  1177                           ;main.c: 521: break;
  1178     0158  2993               	goto	l1835
  1179     0159                     l1817:
  1180                           
  1181                           ;main.c: 523: unsigned char error[4] = {16, 11, 11, 10};
  1182     0159  084C               	movf	main@F1381+3,w
  1183     015A  00B8               	movwf	main@error+3
  1184     015B  084B               	movf	main@F1381+2,w
  1185     015C  00B7               	movwf	main@error+2
  1186     015D  084A               	movf	main@F1381+1,w
  1187     015E  00B6               	movwf	main@error+1
  1188     015F  0849               	movf	main@F1381,w
  1189     0160  00B5               	movwf	main@error
  1190     0161                     l1819:
  1191                           
  1192                           ;main.c: 524: display_message(error, 2000);
  1193     0161  30D0               	movlw	208
  1194     0162  00A0               	movwf	display_message@duration_ms
  1195     0163  3007               	movlw	7
  1196     0164  00A1               	movwf	display_message@duration_ms+1
  1197     0165  3035               	movlw	(low (main@error| 0))& (0+255)
  1198     0166  120A  118A  2523  120A  118A  	fcall	_display_message
  1199     016B                     l1821:
  1200                           
  1201                           ;main.c: 525: clear_display();
  1202     016B  120A  118A  2673  120A  118A  	fcall	_clear_display
  1203     0170                     l1823:
  1204                           
  1205                           ;main.c: 526: _delay((unsigned long)((100)*(20000000/4000.0)));
  1206     0170  3003               	movlw	3
  1207     0171  1283               	bcf	3,5	;RP0=0, select bank0
  1208     0172  1303               	bcf	3,6	;RP1=0, select bank0
  1209     0173  00AC               	movwf	??_main+2
  1210     0174  308A               	movlw	138
  1211     0175  00AB               	movwf	??_main+1
  1212     0176  3055               	movlw	85
  1213     0177  00AA               	movwf	??_main
  1214     0178                     u1557:
  1215     0178  0BAA               	decfsz	??_main,f
  1216     0179  2978               	goto	u1557
  1217     017A  0BAB               	decfsz	??_main+1,f
  1218     017B  2978               	goto	u1557
  1219     017C  0BAC               	decfsz	??_main+2,f
  1220     017D  2978               	goto	u1557
  1221     017E                     l1825:
  1222                           
  1223                           ;main.c: 528: key_ready = 0;
  1224     017E  1283               	bcf	3,5	;RP0=0, select bank0
  1225     017F  1303               	bcf	3,6	;RP1=0, select bank0
  1226     0180  01EC               	clrf	_key_ready	;volatile
  1227     0181                     l1827:
  1228                           
  1229                           ;main.c: 529: key_pressed = 0xFF;
  1230     0181  30FF               	movlw	255
  1231     0182  00DE               	movwf	_key_pressed	;volatile
  1232     0183  28AA               	goto	l1769
  1233     0184                     l1831:
  1234     0184  3003               	movlw	3
  1235     0185  066B               	xorwf	_hold_flag2,w	;volatile
  1236     0186  1D03               	btfss	3,2
  1237     0187  2989               	goto	u1411
  1238     0188  298A               	goto	u1410
  1239     0189                     u1411:
  1240     0189  2993               	goto	l1835
  1241     018A                     u1410:
  1242     018A                     l1833:
  1243     018A  3017               	movlw	23
  1244     018B  026A               	subwf	_hold_counter+1,w	;volatile
  1245     018C  3070               	movlw	112
  1246     018D  1903               	skipnz
  1247     018E  0269               	subwf	_hold_counter,w	;volatile
  1248     018F  1C03               	skipc
  1249     0190  2992               	goto	u1421
  1250     0191  2993               	goto	u1420
  1251     0192                     u1421:
  1252     0192  28AD               	goto	l1771
  1253     0193                     u1420:
  1254     0193                     l1835:
  1255                           
  1256                           ;main.c: 531: };main.c: 532: };main.c: 533: };main.c: 535: clear_display();
  1257     0193  120A  118A  2673  120A  118A  	fcall	_clear_display
  1258     0198                     l1837:
  1259                           
  1260                           ;main.c: 536: _delay((unsigned long)((50)*(20000000/4000.0)));
  1261     0198  3002               	movlw	2
  1262     0199  1283               	bcf	3,5	;RP0=0, select bank0
  1263     019A  1303               	bcf	3,6	;RP1=0, select bank0
  1264     019B  00AC               	movwf	??_main+2
  1265     019C  3045               	movlw	69
  1266     019D  00AB               	movwf	??_main+1
  1267     019E  30A9               	movlw	169
  1268     019F  00AA               	movwf	??_main
  1269     01A0                     u1567:
  1270     01A0  0BAA               	decfsz	??_main,f
  1271     01A1  29A0               	goto	u1567
  1272     01A2  0BAB               	decfsz	??_main+1,f
  1273     01A3  29A0               	goto	u1567
  1274     01A4  0BAC               	decfsz	??_main+2,f
  1275     01A5  29A0               	goto	u1567
  1276     01A6                     l1839:
  1277                           
  1278                           ;main.c: 541: hold_counter = 0;
  1279     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1280     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1281     01A8  01E9               	clrf	_hold_counter	;volatile
  1282     01A9  01EA               	clrf	_hold_counter+1	;volatile
  1283                           
  1284                           ;main.c: 542: while (hold_flag2 == 1 && hold_counter < 6000) {
  1285     01AA  2A8F               	goto	l1897
  1286     01AB                     l1841:
  1287                           
  1288                           ;main.c: 545: key_ready = 0;
  1289     01AB  01EC               	clrf	_key_ready	;volatile
  1290     01AC                     l1843:
  1291                           
  1292                           ;main.c: 546: _delay((unsigned long)((10)*(20000000/4000.0)));
  1293     01AC  3041               	movlw	65
  1294     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1295     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1296     01AF  00AB               	movwf	??_main+1
  1297     01B0  30ED               	movlw	237
  1298     01B1  00AA               	movwf	??_main
  1299     01B2                     u1577:
  1300     01B2  0BAA               	decfsz	??_main,f
  1301     01B3  29B2               	goto	u1577
  1302     01B4  0BAB               	decfsz	??_main+1,f
  1303     01B5  29B2               	goto	u1577
  1304     01B6  29B7               	nop2
  1305                           
  1306                           ;main.c: 548: while(!key_ready && hold_counter < 6000){
  1307     01B7  29D8               	goto	l1853
  1308     01B8                     l1845:
  1309                           
  1310                           ;main.c: 549: unsigned char inicio[4] = {0, 0, 0, 0};
  1311     01B8  3000               	movlw	0
  1312     01B9  00BC               	movwf	main@inicio+3
  1313     01BA  3000               	movlw	0
  1314     01BB  00BB               	movwf	main@inicio+2
  1315     01BC  3000               	movlw	0
  1316     01BD  00BA               	movwf	main@inicio+1
  1317     01BE  3000               	movlw	0
  1318     01BF  00B9               	movwf	main@inicio
  1319     01C0                     l1847:
  1320                           
  1321                           ;main.c: 550: display_message(inicio,10);
  1322     01C0  300A               	movlw	10
  1323     01C1  00A0               	movwf	display_message@duration_ms
  1324     01C2  3000               	movlw	0
  1325     01C3  00A1               	movwf	display_message@duration_ms+1
  1326     01C4  3039               	movlw	(low (main@inicio| 0))& (0+255)
  1327     01C5  120A  118A  2523  120A  118A  	fcall	_display_message
  1328     01CA                     l1849:
  1329                           
  1330                           ;main.c: 551: if(hold_counter >= 6000){
  1331     01CA  3017               	movlw	23
  1332     01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1333     01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1334     01CD  026A               	subwf	_hold_counter+1,w	;volatile
  1335     01CE  3070               	movlw	112
  1336     01CF  1903               	skipnz
  1337     01D0  0269               	subwf	_hold_counter,w	;volatile
  1338     01D1  1C03               	skipc
  1339     01D2  29D4               	goto	u1431
  1340     01D3  29D5               	goto	u1430
  1341     01D4                     u1431:
  1342     01D4  29D8               	goto	l1853
  1343     01D5                     u1430:
  1344     01D5                     l1851:
  1345                           
  1346                           ;main.c: 552: timeout = 1;
  1347     01D5  01C8               	clrf	main@timeout
  1348     01D6  0AC8               	incf	main@timeout,f
  1349                           
  1350                           ;main.c: 553: break;
  1351     01D7  29E8               	goto	l1857
  1352     01D8                     l1853:
  1353     01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1354     01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1355     01DA  086C               	movf	_key_ready,w	;volatile
  1356     01DB  1D03               	btfss	3,2
  1357     01DC  29DE               	goto	u1441
  1358     01DD  29DF               	goto	u1440
  1359     01DE                     u1441:
  1360     01DE  29E8               	goto	l1857
  1361     01DF                     u1440:
  1362     01DF                     l1855:
  1363     01DF  3017               	movlw	23
  1364     01E0  026A               	subwf	_hold_counter+1,w	;volatile
  1365     01E1  3070               	movlw	112
  1366     01E2  1903               	skipnz
  1367     01E3  0269               	subwf	_hold_counter,w	;volatile
  1368     01E4  1C03               	skipc
  1369     01E5  29E7               	goto	u1451
  1370     01E6  29E8               	goto	u1450
  1371     01E7                     u1451:
  1372     01E7  29B8               	goto	l1845
  1373     01E8                     u1450:
  1374     01E8                     l1857:
  1375                           
  1376                           ;main.c: 554: };main.c: 555: };main.c: 557: clear_display();
  1377     01E8  120A  118A  2673  120A  118A  	fcall	_clear_display
  1378     01ED                     l1859:
  1379                           
  1380                           ;main.c: 559: if(!timeout){
  1381     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1382     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1383     01EF  0848               	movf	main@timeout,w
  1384     01F0  1D03               	btfss	3,2
  1385     01F1  29F3               	goto	u1461
  1386     01F2  29F4               	goto	u1460
  1387     01F3                     u1461:
  1388     01F3  2A8F               	goto	l1897
  1389     01F4                     u1460:
  1390     01F4                     l1861:
  1391                           
  1392                           ;main.c: 561: unsigned char senha_valida = capture_user_input_senha();
  1393     01F4  120A  118A  2384  120A  118A  	fcall	_capture_user_input_senha
  1394     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1395     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1396     01FB  00C6               	movwf	main@senha_valida_169
  1397     01FC                     l1863:
  1398                           
  1399                           ;main.c: 562: clear_display();
  1400     01FC  120A  118A  2673  120A  118A  	fcall	_clear_display
  1401     0201                     l1865:
  1402                           
  1403                           ;main.c: 566: if(senha_valida){
  1404     0201  1283               	bcf	3,5	;RP0=0, select bank0
  1405     0202  1303               	bcf	3,6	;RP1=0, select bank0
  1406     0203  0846               	movf	main@senha_valida_169,w
  1407     0204  1903               	btfsc	3,2
  1408     0205  2A07               	goto	u1471
  1409     0206  2A08               	goto	u1470
  1410     0207                     u1471:
  1411     0207  2A54               	goto	l1883
  1412     0208                     u1470:
  1413     0208                     l1867:
  1414                           
  1415                           ;main.c: 567: stepper_set(4,500);
  1416     0208  3004               	movlw	4
  1417     0209  00A0               	movwf	stepper_set@steps
  1418     020A  3000               	movlw	0
  1419     020B  00A1               	movwf	stepper_set@steps+1
  1420     020C  30F4               	movlw	244
  1421     020D  00A2               	movwf	stepper_set@step_time
  1422     020E  3001               	movlw	1
  1423     020F  00A3               	movwf	stepper_set@step_time+1
  1424     0210  120A  118A  22A9  120A  118A  	fcall	_stepper_set
  1425     0215                     l1869:
  1426                           
  1427                           ;main.c: 568: hold_flag2 = 3;
  1428     0215  3003               	movlw	3
  1429     0216  1283               	bcf	3,5	;RP0=0, select bank0
  1430     0217  1303               	bcf	3,6	;RP1=0, select bank0
  1431     0218  00EB               	movwf	_hold_flag2	;volatile
  1432     0219                     l1871:
  1433                           
  1434                           ;main.c: 569: unsigned char cLSE[4] = {10, 5 , 12, 13};
  1435     0219  1683               	bsf	3,5	;RP0=1, select bank1
  1436     021A  1303               	bcf	3,6	;RP1=0, select bank1
  1437     021B  0827               	movf	(main@F1389+3)^(0+128),w
  1438     021C  1283               	bcf	3,5	;RP0=0, select bank0
  1439     021D  1303               	bcf	3,6	;RP1=0, select bank0
  1440     021E  00C0               	movwf	main@cLSE+3
  1441     021F  1683               	bsf	3,5	;RP0=1, select bank1
  1442     0220  1303               	bcf	3,6	;RP1=0, select bank1
  1443     0221  0826               	movf	(main@F1389+2)^(0+128),w
  1444     0222  1283               	bcf	3,5	;RP0=0, select bank0
  1445     0223  1303               	bcf	3,6	;RP1=0, select bank0
  1446     0224  00BF               	movwf	main@cLSE+2
  1447     0225  1683               	bsf	3,5	;RP0=1, select bank1
  1448     0226  1303               	bcf	3,6	;RP1=0, select bank1
  1449     0227  0825               	movf	(main@F1389+1)^(0+128),w
  1450     0228  1283               	bcf	3,5	;RP0=0, select bank0
  1451     0229  1303               	bcf	3,6	;RP1=0, select bank0
  1452     022A  00BE               	movwf	main@cLSE+1
  1453     022B  1683               	bsf	3,5	;RP0=1, select bank1
  1454     022C  1303               	bcf	3,6	;RP1=0, select bank1
  1455     022D  0824               	movf	main@F1389^(0+128),w
  1456     022E  1283               	bcf	3,5	;RP0=0, select bank0
  1457     022F  1303               	bcf	3,6	;RP1=0, select bank0
  1458     0230  00BD               	movwf	main@cLSE
  1459                           
  1460                           ;main.c: 570: display_message(cLSE, 200);
  1461     0231  30C8               	movlw	200
  1462     0232  00A0               	movwf	display_message@duration_ms
  1463     0233  3000               	movlw	0
  1464     0234  00A1               	movwf	display_message@duration_ms+1
  1465     0235  303D               	movlw	(low (main@cLSE| 0))& (0+255)
  1466     0236  120A  118A  2523  120A  118A  	fcall	_display_message
  1467     023B                     l1873:
  1468                           
  1469                           ;main.c: 571: clear_display();
  1470     023B  120A  118A  2673  120A  118A  	fcall	_clear_display
  1471     0240                     l1875:
  1472                           
  1473                           ;main.c: 573: _delay((unsigned long)((100)*(20000000/4000.0)));
  1474     0240  3003               	movlw	3
  1475     0241  1283               	bcf	3,5	;RP0=0, select bank0
  1476     0242  1303               	bcf	3,6	;RP1=0, select bank0
  1477     0243  00AC               	movwf	??_main+2
  1478     0244  308A               	movlw	138
  1479     0245  00AB               	movwf	??_main+1
  1480     0246  3055               	movlw	85
  1481     0247  00AA               	movwf	??_main
  1482     0248                     u1587:
  1483     0248  0BAA               	decfsz	??_main,f
  1484     0249  2A48               	goto	u1587
  1485     024A  0BAB               	decfsz	??_main+1,f
  1486     024B  2A48               	goto	u1587
  1487     024C  0BAC               	decfsz	??_main+2,f
  1488     024D  2A48               	goto	u1587
  1489     024E                     l1877:
  1490                           
  1491                           ;main.c: 576: key_ready = 0;
  1492     024E  1283               	bcf	3,5	;RP0=0, select bank0
  1493     024F  1303               	bcf	3,6	;RP1=0, select bank0
  1494     0250  01EC               	clrf	_key_ready	;volatile
  1495     0251                     l1879:
  1496                           
  1497                           ;main.c: 577: key_pressed = 0xFF;
  1498     0251  30FF               	movlw	255
  1499     0252  00DE               	movwf	_key_pressed	;volatile
  1500                           
  1501                           ;main.c: 578: break;
  1502     0253  2A9E               	goto	l1901
  1503     0254                     l1883:
  1504                           
  1505                           ;main.c: 580: unsigned char erro[4] = {16, 11, 11, 10};
  1506     0254  1683               	bsf	3,5	;RP0=1, select bank1
  1507     0255  1303               	bcf	3,6	;RP1=0, select bank1
  1508     0256  0823               	movf	(main@F1392+3)^(0+128),w
  1509     0257  1283               	bcf	3,5	;RP0=0, select bank0
  1510     0258  1303               	bcf	3,6	;RP1=0, select bank0
  1511     0259  00C4               	movwf	main@erro+3
  1512     025A  1683               	bsf	3,5	;RP0=1, select bank1
  1513     025B  1303               	bcf	3,6	;RP1=0, select bank1
  1514     025C  0822               	movf	(main@F1392+2)^(0+128),w
  1515     025D  1283               	bcf	3,5	;RP0=0, select bank0
  1516     025E  1303               	bcf	3,6	;RP1=0, select bank0
  1517     025F  00C3               	movwf	main@erro+2
  1518     0260  1683               	bsf	3,5	;RP0=1, select bank1
  1519     0261  1303               	bcf	3,6	;RP1=0, select bank1
  1520     0262  0821               	movf	(main@F1392+1)^(0+128),w
  1521     0263  1283               	bcf	3,5	;RP0=0, select bank0
  1522     0264  1303               	bcf	3,6	;RP1=0, select bank0
  1523     0265  00C2               	movwf	main@erro+1
  1524     0266  1683               	bsf	3,5	;RP0=1, select bank1
  1525     0267  1303               	bcf	3,6	;RP1=0, select bank1
  1526     0268  0820               	movf	main@F1392^(0+128),w
  1527     0269  1283               	bcf	3,5	;RP0=0, select bank0
  1528     026A  1303               	bcf	3,6	;RP1=0, select bank0
  1529     026B  00C1               	movwf	main@erro
  1530     026C                     l1885:
  1531                           
  1532                           ;main.c: 581: display_message(erro, 2000);
  1533     026C  30D0               	movlw	208
  1534     026D  00A0               	movwf	display_message@duration_ms
  1535     026E  3007               	movlw	7
  1536     026F  00A1               	movwf	display_message@duration_ms+1
  1537     0270  3041               	movlw	(low (main@erro| 0))& (0+255)
  1538     0271  120A  118A  2523  120A  118A  	fcall	_display_message
  1539     0276                     l1887:
  1540                           
  1541                           ;main.c: 582: clear_display();
  1542     0276  120A  118A  2673  120A  118A  	fcall	_clear_display
  1543     027B                     l1889:
  1544                           
  1545                           ;main.c: 584: _delay((unsigned long)((100)*(20000000/4000.0)));
  1546     027B  3003               	movlw	3
  1547     027C  1283               	bcf	3,5	;RP0=0, select bank0
  1548     027D  1303               	bcf	3,6	;RP1=0, select bank0
  1549     027E  00AC               	movwf	??_main+2
  1550     027F  308A               	movlw	138
  1551     0280  00AB               	movwf	??_main+1
  1552     0281  3055               	movlw	85
  1553     0282  00AA               	movwf	??_main
  1554     0283                     u1597:
  1555     0283  0BAA               	decfsz	??_main,f
  1556     0284  2A83               	goto	u1597
  1557     0285  0BAB               	decfsz	??_main+1,f
  1558     0286  2A83               	goto	u1597
  1559     0287  0BAC               	decfsz	??_main+2,f
  1560     0288  2A83               	goto	u1597
  1561     0289                     l1891:
  1562                           
  1563                           ;main.c: 587: key_ready = 0;
  1564     0289  1283               	bcf	3,5	;RP0=0, select bank0
  1565     028A  1303               	bcf	3,6	;RP1=0, select bank0
  1566     028B  01EC               	clrf	_key_ready	;volatile
  1567     028C                     l1893:
  1568                           
  1569                           ;main.c: 588: key_pressed = 0xFF;
  1570     028C  30FF               	movlw	255
  1571     028D  00DE               	movwf	_key_pressed	;volatile
  1572     028E  29A6               	goto	l1839
  1573     028F                     l1897:
  1574     028F  036B               	decf	_hold_flag2,w	;volatile
  1575     0290  1D03               	btfss	3,2
  1576     0291  2A93               	goto	u1481
  1577     0292  2A94               	goto	u1480
  1578     0293                     u1481:
  1579     0293  2A9E               	goto	l218
  1580     0294                     u1480:
  1581     0294                     l1899:
  1582     0294  3017               	movlw	23
  1583     0295  026A               	subwf	_hold_counter+1,w	;volatile
  1584     0296  3070               	movlw	112
  1585     0297  1903               	skipnz
  1586     0298  0269               	subwf	_hold_counter,w	;volatile
  1587     0299  1C03               	skipc
  1588     029A  2A9C               	goto	u1491
  1589     029B  2A9D               	goto	u1490
  1590     029C                     u1491:
  1591     029C  29AB               	goto	l1841
  1592     029D                     u1490:
  1593     029D  2A9E               	goto	l1901
  1594     029E                     l218:
  1595     029E                     l1901:
  1596     029E  1283               	bcf	3,5	;RP0=0, select bank0
  1597     029F  1303               	bcf	3,6	;RP1=0, select bank0
  1598     02A0  086C               	movf	_key_ready,w	;volatile
  1599     02A1  1D03               	btfss	3,2
  1600     02A2  2AA4               	goto	u1501
  1601     02A3  2AA5               	goto	u1500
  1602     02A4                     u1501:
  1603     02A4  2869               	goto	l1745
  1604     02A5                     u1500:
  1605     02A5  2863               	goto	l1743
  1606     02A6  120A  118A  2810   	ljmp	start
  1607     02A9                     __end_of_main:
  1608                           
  1609                           	psect	text1
  1610     049D                     __ptext1:	
  1611 ;; *************** function _verifica_senha *****************
  1612 ;; Defined at:
  1613 ;;		line 306 in file "main.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  j               1    9[BANK0 ] unsigned char 
  1618 ;;  i               1    8[BANK0 ] unsigned char 
  1619 ;;  i               1    7[BANK0 ] unsigned char 
  1620 ;;  senha           4    1[BANK0 ] unsigned char [4]
  1621 ;;  index           1    6[BANK0 ] unsigned char 
  1622 ;;  senha_valida    1    5[BANK0 ] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      unsigned char 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1632 ;;      Params:         0       0       0       0       0
  1633 ;;      Locals:         0       9       0       0       0
  1634 ;;      Temps:          0       1       0       0       0
  1635 ;;      Totals:         0      10       0       0       0
  1636 ;;Total ram usage:       10 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 5
  1639 ;; This function calls:
  1640 ;;		_clear_display
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646     049D                     _verifica_senha:	
  1647                           ;psect for function _verifica_senha
  1648                           
  1649     049D                     l1561:	
  1650                           ;incstack = 0
  1651                           ; Regs used in _verifica_senha: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1652                           
  1653                           
  1654                           ;main.c: 307: unsigned char senha[4];;main.c: 308: unsigned char senha_valida = 1;
  1655     049D  1283               	bcf	3,5	;RP0=0, select bank0
  1656     049E  1303               	bcf	3,6	;RP1=0, select bank0
  1657     049F  01A5               	clrf	verifica_senha@senha_valida
  1658     04A0  0AA5               	incf	verifica_senha@senha_valida,f
  1659     04A1                     l1563:
  1660                           
  1661                           ;main.c: 311: for (unsigned char i = 0; i < 4; i++) {
  1662     04A1  01A7               	clrf	verifica_senha@i
  1663     04A2                     l1569:
  1664                           
  1665                           ;main.c: 312: user_input[i] = 0xFF;
  1666     04A2  0827               	movf	verifica_senha@i,w
  1667     04A3  3E5F               	addlw	(low (_user_input| 0))& (0+255)
  1668     04A4  0084               	movwf	4
  1669     04A5  30FF               	movlw	255
  1670     04A6  1383               	bcf	3,7	;select IRP bank0
  1671     04A7  0080               	movwf	0
  1672                           
  1673                           ;main.c: 313: display_digits[i] = 0xFF;
  1674     04A8  0827               	movf	verifica_senha@i,w
  1675     04A9  3E55               	addlw	(low (_display_digits| 0))& (0+255)
  1676     04AA  0084               	movwf	4
  1677     04AB  30FF               	movlw	255
  1678     04AC  0080               	movwf	0
  1679     04AD                     l1571:
  1680     04AD  3001               	movlw	1
  1681     04AE  00FF               	movwf	btemp+1
  1682     04AF  087F               	movf	btemp+1,w
  1683     04B0  07A7               	addwf	verifica_senha@i,f
  1684     04B1                     l1573:
  1685     04B1  3004               	movlw	4
  1686     04B2  0227               	subwf	verifica_senha@i,w
  1687     04B3  1C03               	skipc
  1688     04B4  2CB6               	goto	u1011
  1689     04B5  2CB7               	goto	u1010
  1690     04B6                     u1011:
  1691     04B6  2CA2               	goto	l1569
  1692     04B7                     u1010:
  1693     04B7                     l1575:
  1694                           
  1695                           ;main.c: 314: };main.c: 316: unsigned char index = 0;
  1696     04B7  01A6               	clrf	verifica_senha@index
  1697                           
  1698                           ;main.c: 317: while (index < 4) {
  1699     04B8  2CEA               	goto	l1599
  1700     04B9                     l1577:
  1701     04B9  086C               	movf	_key_ready,w	;volatile
  1702     04BA  1903               	btfsc	3,2
  1703     04BB  2CBD               	goto	u1021
  1704     04BC  2CBE               	goto	u1020
  1705     04BD                     u1021:
  1706     04BD  2CB9               	goto	l1577
  1707     04BE                     u1020:
  1708     04BE                     l1579:
  1709                           
  1710                           ;main.c: 319: key_ready = 0;
  1711     04BE  01EC               	clrf	_key_ready	;volatile
  1712     04BF                     l1581:
  1713                           
  1714                           ;main.c: 322: for (unsigned char j = 3; j > 0; j--) {
  1715     04BF  3003               	movlw	3
  1716     04C0  00A9               	movwf	verifica_senha@j
  1717     04C1                     l1587:
  1718                           
  1719                           ;main.c: 323: user_input[j] = user_input[j - 1];
  1720     04C1  0829               	movf	verifica_senha@j,w
  1721     04C2  3E5E               	addlw	(low ((_user_input| 0+255)))& (0+255)
  1722     04C3  0084               	movwf	4
  1723     04C4  1383               	bcf	3,7	;select IRP bank0
  1724     04C5  0800               	movf	0,w
  1725     04C6  00FF               	movwf	btemp+1
  1726     04C7  0829               	movf	verifica_senha@j,w
  1727     04C8  3E5F               	addlw	(low (_user_input| 0))& (0+255)
  1728     04C9  0084               	movwf	4
  1729     04CA  087F               	movf	btemp+1,w
  1730     04CB  0080               	movwf	0
  1731                           
  1732                           ;main.c: 324: display_digits[j] = display_digits[j - 1];
  1733     04CC  0829               	movf	verifica_senha@j,w
  1734     04CD  3E54               	addlw	(low ((_display_digits| 0+255)))& (0+255)
  1735     04CE  0084               	movwf	4
  1736     04CF  0800               	movf	0,w
  1737     04D0  00FF               	movwf	btemp+1
  1738     04D1  0829               	movf	verifica_senha@j,w
  1739     04D2  3E55               	addlw	(low (_display_digits| 0))& (0+255)
  1740     04D3  0084               	movwf	4
  1741     04D4  087F               	movf	btemp+1,w
  1742     04D5  0080               	movwf	0
  1743     04D6                     l1589:
  1744     04D6  3001               	movlw	1
  1745     04D7  02A9               	subwf	verifica_senha@j,f
  1746     04D8                     l1591:
  1747     04D8  0829               	movf	verifica_senha@j,w
  1748     04D9  1D03               	btfss	3,2
  1749     04DA  2CDC               	goto	u1031
  1750     04DB  2CDD               	goto	u1030
  1751     04DC                     u1031:
  1752     04DC  2CC1               	goto	l1587
  1753     04DD                     u1030:
  1754     04DD                     l1593:
  1755                           
  1756                           ;main.c: 325: };main.c: 328: user_input[0] = 0b01000000;
  1757     04DD  3040               	movlw	64
  1758     04DE  00DF               	movwf	_user_input
  1759                           
  1760                           ;main.c: 329: display_digits[0] = 0b01000000;
  1761     04DF  3040               	movlw	64
  1762     04E0  00D5               	movwf	_display_digits	;volatile
  1763     04E1                     l1595:
  1764                           
  1765                           ;main.c: 332: senha[index] = key_pressed;
  1766     04E1  0826               	movf	verifica_senha@index,w
  1767     04E2  3E21               	addlw	(low (verifica_senha@senha| 0))& (0+255)
  1768     04E3  0084               	movwf	4
  1769     04E4  085E               	movf	_key_pressed,w	;volatile
  1770     04E5  0080               	movwf	0
  1771     04E6                     l1597:
  1772                           
  1773                           ;main.c: 334: index++;
  1774     04E6  3001               	movlw	1
  1775     04E7  00FF               	movwf	btemp+1
  1776     04E8  087F               	movf	btemp+1,w
  1777     04E9  07A6               	addwf	verifica_senha@index,f
  1778     04EA                     l1599:
  1779     04EA  3004               	movlw	4
  1780     04EB  0226               	subwf	verifica_senha@index,w
  1781     04EC  1C03               	skipc
  1782     04ED  2CEF               	goto	u1041
  1783     04EE  2CF0               	goto	u1040
  1784     04EF                     u1041:
  1785     04EF  2CB9               	goto	l1577
  1786     04F0                     u1040:
  1787     04F0                     l1601:
  1788                           
  1789                           ;main.c: 335: };main.c: 336: key_ready = 0;
  1790     04F0  01EC               	clrf	_key_ready	;volatile
  1791                           
  1792                           ;main.c: 339: while (key_pressed != 0x0F) {
  1793     04F1  2CF8               	goto	l1607
  1794     04F2                     l1603:
  1795     04F2  086C               	movf	_key_ready,w	;volatile
  1796     04F3  1903               	btfsc	3,2
  1797     04F4  2CF6               	goto	u1051
  1798     04F5  2CF7               	goto	u1050
  1799     04F6                     u1051:
  1800     04F6  2CF2               	goto	l1603
  1801     04F7                     u1050:
  1802     04F7  2CF0               	goto	l1601
  1803     04F8                     l1607:
  1804     04F8  300F               	movlw	15
  1805     04F9  065E               	xorwf	_key_pressed,w	;volatile
  1806     04FA  1D03               	btfss	3,2
  1807     04FB  2CFD               	goto	u1061
  1808     04FC  2CFE               	goto	u1060
  1809     04FD                     u1061:
  1810     04FD  2CF2               	goto	l1603
  1811     04FE                     u1060:
  1812     04FE                     l1609:
  1813                           
  1814                           ;main.c: 342: };main.c: 344: clear_display();
  1815     04FE  120A  118A  2673  120A  118A  	fcall	_clear_display
  1816     0503                     l1611:
  1817                           
  1818                           ;main.c: 347: for (unsigned char i = 0; i < 4; i++) {
  1819     0503  1283               	bcf	3,5	;RP0=0, select bank0
  1820     0504  1303               	bcf	3,6	;RP1=0, select bank0
  1821     0505  01A8               	clrf	verifica_senha@i_122
  1822     0506                     l1617:
  1823                           
  1824                           ;main.c: 348: if (senha[i] != password[i]) {
  1825     0506  0828               	movf	verifica_senha@i_122,w
  1826     0507  3E59               	addlw	(low (_password| 0))& (0+255)
  1827     0508  0084               	movwf	4
  1828     0509  1383               	bcf	3,7	;select IRP bank0
  1829     050A  0800               	movf	0,w
  1830     050B  00A0               	movwf	??_verifica_senha
  1831     050C  0828               	movf	verifica_senha@i_122,w
  1832     050D  3E21               	addlw	(low (verifica_senha@senha| 0))& (0+255)
  1833     050E  0084               	movwf	4
  1834     050F  0800               	movf	0,w
  1835     0510  0620               	xorwf	??_verifica_senha,w
  1836     0511  1903               	skipnz
  1837     0512  2D14               	goto	u1071
  1838     0513  2D15               	goto	u1070
  1839     0514                     u1071:
  1840     0514  2D17               	goto	l1621
  1841     0515                     u1070:
  1842     0515                     l1619:
  1843                           
  1844                           ;main.c: 349: senha_valida = 0;
  1845     0515  01A5               	clrf	verifica_senha@senha_valida
  1846                           
  1847                           ;main.c: 350: break;
  1848     0516  2D21               	goto	l1625
  1849     0517                     l1621:
  1850     0517  3001               	movlw	1
  1851     0518  00FF               	movwf	btemp+1
  1852     0519  087F               	movf	btemp+1,w
  1853     051A  07A8               	addwf	verifica_senha@i_122,f
  1854     051B                     l1623:
  1855     051B  3004               	movlw	4
  1856     051C  0228               	subwf	verifica_senha@i_122,w
  1857     051D  1C03               	skipc
  1858     051E  2D20               	goto	u1081
  1859     051F  2D21               	goto	u1080
  1860     0520                     u1081:
  1861     0520  2D06               	goto	l1617
  1862     0521                     u1080:
  1863     0521                     l1625:
  1864                           
  1865                           ;main.c: 351: };main.c: 352: };main.c: 354: return senha_valida;
  1866     0521  0825               	movf	verifica_senha@senha_valida,w
  1867     0522                     l164:
  1868     0522  0008               	return
  1869     0523                     __end_of_verifica_senha:
  1870                           
  1871                           	psect	text2
  1872     0651                     __ptext2:	
  1873 ;; *************** function _t0_init *****************
  1874 ;; Defined at:
  1875 ;;		line 394 in file "main.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0
  1892 ;;      Totals:         0       0       0       0       0
  1893 ;;Total ram usage:        0 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; Hardware stack levels required when called: 4
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903     0651                     _t0_init:	
  1904                           ;psect for function _t0_init
  1905                           
  1906     0651                     l1663:	
  1907                           ;incstack = 0
  1908                           ; Regs used in _t0_init: [wreg+status,2+status,0]
  1909                           
  1910                           
  1911                           ;main.c: 395: OPTION_REGbits.T0CS = 0;
  1912     0651  1683               	bsf	3,5	;RP0=1, select bank1
  1913     0652  1303               	bcf	3,6	;RP1=0, select bank1
  1914     0653  1281               	bcf	1,5	;volatile
  1915                           
  1916                           ;main.c: 396: OPTION_REGbits.PSA = 0;
  1917     0654  1181               	bcf	1,3	;volatile
  1918     0655                     l1665:
  1919                           
  1920                           ;main.c: 397: OPTION_REGbits.PS = 7;
  1921     0655  3007               	movlw	7
  1922     0656  0481               	iorwf	1,f	;volatile
  1923     0657                     l1667:
  1924                           
  1925                           ;main.c: 398: TMR0 = 0xff - 195;
  1926     0657  303C               	movlw	60
  1927     0658  1283               	bcf	3,5	;RP0=0, select bank0
  1928     0659  1303               	bcf	3,6	;RP1=0, select bank0
  1929     065A  0081               	movwf	1	;volatile
  1930     065B                     l1669:
  1931                           
  1932                           ;main.c: 399: TMR0IE = 1;
  1933     065B  168B               	bsf	11,5	;volatile
  1934     065C                     l1671:
  1935                           
  1936                           ;main.c: 400: GIE = 1;
  1937     065C  178B               	bsf	11,7	;volatile
  1938     065D                     l199:
  1939     065D  0008               	return
  1940     065E                     __end_of_t0_init:
  1941                           
  1942                           	psect	text3
  1943     02A9                     __ptext3:	
  1944 ;; *************** function _stepper_set *****************
  1945 ;; Defined at:
  1946 ;;		line 371 in file "main.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  steps           2    0[BANK0 ] int 
  1949 ;;  step_time       2    2[BANK0 ] unsigned int 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  j               2    8[BANK0 ] int 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1961 ;;      Params:         0       4       0       0       0
  1962 ;;      Locals:         0       4       0       0       0
  1963 ;;      Temps:          0       2       0       0       0
  1964 ;;      Totals:         0      10       0       0       0
  1965 ;;Total ram usage:       10 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; Hardware stack levels required when called: 4
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975     02A9                     _stepper_set:	
  1976                           ;psect for function _stepper_set
  1977                           
  1978     02A9                     l1631:	
  1979                           ;incstack = 0
  1980                           ; Regs used in _stepper_set: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1981                           
  1982                           
  1983                           ;main.c: 372: const unsigned char states[] = {0b0001, 0b0010, 0b0100, 0b1000};;main.c: 3
      +                          73: static int i = 0;;main.c: 374: while (steps != 0) {
  1984     02A9  2B7B               	goto	l1661
  1985     02AA                     l1633:
  1986                           
  1987                           ;main.c: 376: RA4 = (states[i] & 0b0001) ? 1 : 0;
  1988     02AA  0865               	movf	stepper_set@i,w
  1989     02AB  3E20               	addlw	low ((stepper_set@states-__stringbase)| (0+32768))
  1990     02AC  0084               	movwf	4
  1991     02AD  120A  118A  2599  120A  118A  	fcall	stringdir
  1992     02B2  3901               	andlw	1
  1993     02B3  1D03               	btfss	3,2
  1994     02B4  2AB6               	goto	u1091
  1995     02B5  2ABA               	goto	u1090
  1996     02B6                     u1091:
  1997     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1998     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1999     02B8  1605               	bsf	5,4	;volatile
  2000     02B9  2ABD               	goto	u1104
  2001     02BA                     u1090:
  2002     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2003     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2004     02BC  1205               	bcf	5,4	;volatile
  2005     02BD                     u1104:
  2006                           
  2007                           ;main.c: 377: RA5 = (states[i] & 0b0010) ? 1 : 0;
  2008     02BD  0865               	movf	stepper_set@i,w
  2009     02BE  3E20               	addlw	low ((stepper_set@states-__stringbase)| (0+32768))
  2010     02BF  0084               	movwf	4
  2011     02C0  120A  118A  2599  120A  118A  	fcall	stringdir
  2012     02C5  3902               	andlw	2
  2013     02C6  1D03               	btfss	3,2
  2014     02C7  2AC9               	goto	u1111
  2015     02C8  2ACD               	goto	u1110
  2016     02C9                     u1111:
  2017     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2018     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2019     02CB  1685               	bsf	5,5	;volatile
  2020     02CC  2AD0               	goto	u1124
  2021     02CD                     u1110:
  2022     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2023     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2024     02CF  1285               	bcf	5,5	;volatile
  2025     02D0                     u1124:
  2026                           
  2027                           ;main.c: 378: RB7 = (states[i] & 0b0100) ? 1 : 0;
  2028     02D0  0865               	movf	stepper_set@i,w
  2029     02D1  3E20               	addlw	low ((stepper_set@states-__stringbase)| (0+32768))
  2030     02D2  0084               	movwf	4
  2031     02D3  120A  118A  2599  120A  118A  	fcall	stringdir
  2032     02D8  3904               	andlw	4
  2033     02D9  1D03               	btfss	3,2
  2034     02DA  2ADC               	goto	u1131
  2035     02DB  2AE0               	goto	u1130
  2036     02DC                     u1131:
  2037     02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2038     02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2039     02DE  1786               	bsf	6,7	;volatile
  2040     02DF  2AE3               	goto	u1144
  2041     02E0                     u1130:
  2042     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2043     02E1  1303               	bcf	3,6	;RP1=0, select bank0
  2044     02E2  1386               	bcf	6,7	;volatile
  2045     02E3                     u1144:
  2046                           
  2047                           ;main.c: 379: RC7 = (states[i] & 0b1000) ? 1 : 0;
  2048     02E3  0865               	movf	stepper_set@i,w
  2049     02E4  3E20               	addlw	low ((stepper_set@states-__stringbase)| (0+32768))
  2050     02E5  0084               	movwf	4
  2051     02E6  120A  118A  2599  120A  118A  	fcall	stringdir
  2052     02EB  3908               	andlw	8
  2053     02EC  1D03               	btfss	3,2
  2054     02ED  2AEF               	goto	u1151
  2055     02EE  2AF3               	goto	u1150
  2056     02EF                     u1151:
  2057     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2058     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2059     02F1  1787               	bsf	7,7	;volatile
  2060     02F2  2AF6               	goto	u1164
  2061     02F3                     u1150:
  2062     02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2063     02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2064     02F5  1387               	bcf	7,7	;volatile
  2065     02F6                     u1164:
  2066     02F6                     l1635:
  2067                           
  2068                           ;main.c: 382: i = (steps > 0) ? (i + 1) : (i - 1);
  2069     02F6  0821               	movf	stepper_set@steps+1,w
  2070     02F7  3A80               	xorlw	128
  2071     02F8  00FF               	movwf	btemp+1
  2072     02F9  3080               	movlw	128
  2073     02FA  027F               	subwf	btemp+1,w
  2074     02FB  1D03               	skipz
  2075     02FC  2AFF               	goto	u1175
  2076     02FD  3001               	movlw	1
  2077     02FE  0220               	subwf	stepper_set@steps,w
  2078     02FF                     u1175:
  2079     02FF  1803               	skipnc
  2080     0300  2B02               	goto	u1171
  2081     0301  2B03               	goto	u1170
  2082     0302                     u1171:
  2083     0302  2B0E               	goto	l1639
  2084     0303                     u1170:
  2085     0303                     l1637:
  2086     0303  1283               	bcf	3,5	;RP0=0, select bank0
  2087     0304  1303               	bcf	3,6	;RP1=0, select bank0
  2088     0305  0865               	movf	stepper_set@i,w
  2089     0306  3EFF               	addlw	255
  2090     0307  00E5               	movwf	stepper_set@i
  2091     0308  0866               	movf	stepper_set@i+1,w
  2092     0309  1803               	skipnc
  2093     030A  3E01               	addlw	1
  2094     030B  3EFF               	addlw	255
  2095     030C  00E6               	movwf	stepper_set@i+1
  2096     030D  2B18               	goto	l1641
  2097     030E                     l1639:
  2098     030E  1283               	bcf	3,5	;RP0=0, select bank0
  2099     030F  1303               	bcf	3,6	;RP1=0, select bank0
  2100     0310  0865               	movf	stepper_set@i,w
  2101     0311  3E01               	addlw	1
  2102     0312  00E5               	movwf	stepper_set@i
  2103     0313  0866               	movf	stepper_set@i+1,w
  2104     0314  1803               	skipnc
  2105     0315  3E01               	addlw	1
  2106     0316  3E00               	addlw	0
  2107     0317  00E6               	movwf	stepper_set@i+1
  2108     0318                     l1641:
  2109                           
  2110                           ;main.c: 383: i = (i > 3) ? 0 : (i < 0) ? 3 : i;
  2111     0318  0866               	movf	stepper_set@i+1,w
  2112     0319  3A80               	xorlw	128
  2113     031A  00FF               	movwf	btemp+1
  2114     031B  3080               	movlw	128
  2115     031C  027F               	subwf	btemp+1,w
  2116     031D  1D03               	skipz
  2117     031E  2B21               	goto	u1185
  2118     031F  3004               	movlw	4
  2119     0320  0265               	subwf	stepper_set@i,w
  2120     0321                     u1185:
  2121     0321  1803               	skipnc
  2122     0322  2B24               	goto	u1181
  2123     0323  2B25               	goto	u1180
  2124     0324                     u1181:
  2125     0324  2B39               	goto	l1649
  2126     0325                     u1180:
  2127     0325                     l1643:
  2128     0325  1283               	bcf	3,5	;RP0=0, select bank0
  2129     0326  1303               	bcf	3,6	;RP1=0, select bank0
  2130     0327  1BE6               	btfsc	stepper_set@i+1,7
  2131     0328  2B2A               	goto	u1191
  2132     0329  2B2B               	goto	u1190
  2133     032A                     u1191:
  2134     032A  2B30               	goto	l1647
  2135     032B                     u1190:
  2136     032B                     l1645:
  2137     032B  0866               	movf	stepper_set@i+1,w
  2138     032C  00A7               	movwf	_stepper_set$129+1
  2139     032D  0865               	movf	stepper_set@i,w
  2140     032E  00A6               	movwf	_stepper_set$129
  2141     032F  2B34               	goto	l187
  2142     0330                     l1647:
  2143     0330  3003               	movlw	3
  2144     0331  00A6               	movwf	_stepper_set$129
  2145     0332  3000               	movlw	0
  2146     0333  00A7               	movwf	_stepper_set$129+1
  2147     0334                     l187:
  2148     0334  0827               	movf	_stepper_set$129+1,w
  2149     0335  00E6               	movwf	stepper_set@i+1
  2150     0336  0826               	movf	_stepper_set$129,w
  2151     0337  00E5               	movwf	stepper_set@i
  2152     0338  2B3D               	goto	l1651
  2153     0339                     l1649:
  2154     0339  1283               	bcf	3,5	;RP0=0, select bank0
  2155     033A  1303               	bcf	3,6	;RP1=0, select bank0
  2156     033B  01E5               	clrf	stepper_set@i
  2157     033C  01E6               	clrf	stepper_set@i+1
  2158     033D                     l1651:
  2159                           
  2160                           ;main.c: 384: steps += (steps > 0) ? -1 : 1;
  2161     033D  0821               	movf	stepper_set@steps+1,w
  2162     033E  3A80               	xorlw	128
  2163     033F  00FF               	movwf	btemp+1
  2164     0340  3080               	movlw	128
  2165     0341  027F               	subwf	btemp+1,w
  2166     0342  1D03               	skipz
  2167     0343  2B46               	goto	u1205
  2168     0344  3001               	movlw	1
  2169     0345  0220               	subwf	stepper_set@steps,w
  2170     0346                     u1205:
  2171     0346  1803               	skipnc
  2172     0347  2B49               	goto	u1201
  2173     0348  2B4A               	goto	u1200
  2174     0349                     u1201:
  2175     0349  2B53               	goto	l1655
  2176     034A                     u1200:
  2177     034A                     l1653:
  2178     034A  3001               	movlw	1
  2179     034B  1283               	bcf	3,5	;RP0=0, select bank0
  2180     034C  1303               	bcf	3,6	;RP1=0, select bank0
  2181     034D  07A0               	addwf	stepper_set@steps,f
  2182     034E  1803               	skipnc
  2183     034F  0AA1               	incf	stepper_set@steps+1,f
  2184     0350  3000               	movlw	0
  2185     0351  07A1               	addwf	stepper_set@steps+1,f
  2186     0352  2B5B               	goto	l1657
  2187     0353                     l1655:
  2188     0353  30FF               	movlw	255
  2189     0354  1283               	bcf	3,5	;RP0=0, select bank0
  2190     0355  1303               	bcf	3,6	;RP1=0, select bank0
  2191     0356  07A0               	addwf	stepper_set@steps,f
  2192     0357  1803               	skipnc
  2193     0358  0AA1               	incf	stepper_set@steps+1,f
  2194     0359  30FF               	movlw	255
  2195     035A  07A1               	addwf	stepper_set@steps+1,f
  2196     035B                     l1657:
  2197                           
  2198                           ;main.c: 387: for (int j = 0; j < step_time; j++) {
  2199     035B  01A8               	clrf	stepper_set@j
  2200     035C  01A9               	clrf	stepper_set@j+1
  2201     035D  2B71               	goto	l192
  2202     035E                     l1659:
  2203                           
  2204                           ;main.c: 388: _delay((unsigned long)((10)*(20000000/4000.0)));
  2205     035E  3041               	movlw	65
  2206     035F  1283               	bcf	3,5	;RP0=0, select bank0
  2207     0360  1303               	bcf	3,6	;RP1=0, select bank0
  2208     0361  00A5               	movwf	??_stepper_set+1
  2209     0362  30ED               	movlw	237
  2210     0363  00A4               	movwf	??_stepper_set
  2211     0364                     u1607:
  2212     0364  0BA4               	decfsz	??_stepper_set,f
  2213     0365  2B64               	goto	u1607
  2214     0366  0BA5               	decfsz	??_stepper_set+1,f
  2215     0367  2B64               	goto	u1607
  2216     0368  2B69               	nop2
  2217     0369  3001               	movlw	1
  2218     036A  1283               	bcf	3,5	;RP0=0, select bank0
  2219     036B  1303               	bcf	3,6	;RP1=0, select bank0
  2220     036C  07A8               	addwf	stepper_set@j,f
  2221     036D  1803               	skipnc
  2222     036E  0AA9               	incf	stepper_set@j+1,f
  2223     036F  3000               	movlw	0
  2224     0370  07A9               	addwf	stepper_set@j+1,f
  2225     0371                     l192:
  2226     0371  0823               	movf	stepper_set@step_time+1,w
  2227     0372  0229               	subwf	stepper_set@j+1,w
  2228     0373  1D03               	skipz
  2229     0374  2B77               	goto	u1215
  2230     0375  0822               	movf	stepper_set@step_time,w
  2231     0376  0228               	subwf	stepper_set@j,w
  2232     0377                     u1215:
  2233     0377  1C03               	skipc
  2234     0378  2B7A               	goto	u1211
  2235     0379  2B7B               	goto	u1210
  2236     037A                     u1211:
  2237     037A  2B5E               	goto	l1659
  2238     037B                     u1210:
  2239     037B                     l1661:
  2240     037B  1283               	bcf	3,5	;RP0=0, select bank0
  2241     037C  1303               	bcf	3,6	;RP1=0, select bank0
  2242     037D  0820               	movf	stepper_set@steps,w
  2243     037E  0421               	iorwf	stepper_set@steps+1,w
  2244     037F  1D03               	btfss	3,2
  2245     0380  2B82               	goto	u1221
  2246     0381  2B83               	goto	u1220
  2247     0382                     u1221:
  2248     0382  2AAA               	goto	l1633
  2249     0383                     u1220:
  2250     0383                     l196:
  2251     0383  0008               	return
  2252     0384                     __end_of_stepper_set:
  2253                           
  2254                           	psect	text4
  2255     065E                     __ptext4:	
  2256 ;; *************** function _stepper_init *****************
  2257 ;; Defined at:
  2258 ;;		line 358 in file "main.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		None
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2272 ;;      Params:         0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0
  2275 ;;      Totals:         0       0       0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 4
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286     065E                     _stepper_init:	
  2287                           ;psect for function _stepper_init
  2288                           
  2289     065E                     l1629:	
  2290                           ;incstack = 0
  2291                           ; Regs used in _stepper_init: []
  2292                           
  2293                           
  2294                           ;main.c: 360: TRISC7 = 0;
  2295     065E  1683               	bsf	3,5	;RP0=1, select bank1
  2296     065F  1303               	bcf	3,6	;RP1=0, select bank1
  2297     0660  1387               	bcf	7,7	;volatile
  2298                           
  2299                           ;main.c: 361: TRISB7 = 0;
  2300     0661  1386               	bcf	6,7	;volatile
  2301                           
  2302                           ;main.c: 362: TRISA5 = 0;
  2303     0662  1285               	bcf	5,5	;volatile
  2304                           
  2305                           ;main.c: 363: TRISA4 = 0;
  2306     0663  1205               	bcf	5,4	;volatile
  2307                           
  2308                           ;main.c: 364: RC7 = 0;
  2309     0664  1283               	bcf	3,5	;RP0=0, select bank0
  2310     0665  1303               	bcf	3,6	;RP1=0, select bank0
  2311     0666  1387               	bcf	7,7	;volatile
  2312                           
  2313                           ;main.c: 365: RB7 = 0;
  2314     0667  1386               	bcf	6,7	;volatile
  2315                           
  2316                           ;main.c: 366: RA5 = 0;
  2317     0668  1285               	bcf	5,5	;volatile
  2318                           
  2319                           ;main.c: 367: RA4 = 0;
  2320     0669  1205               	bcf	5,4	;volatile
  2321     066A                     l167:
  2322     066A  0008               	return
  2323     066B                     __end_of_stepper_init:
  2324                           
  2325                           	psect	text5
  2326     0523                     __ptext5:	
  2327 ;; *************** function _display_message *****************
  2328 ;; Defined at:
  2329 ;;		line 163 in file "main.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  message         1    wreg     PTR const unsigned char 
  2332 ;;		 -> main@erro(4), main@cLSE(4), main@inicio(4), main@error(4), 
  2333 ;;		 -> main@Open(4), main@on(4), 
  2334 ;;  duration_ms     2    0[BANK0 ] unsigned int 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  message         1    6[BANK0 ] PTR const unsigned char 
  2337 ;;		 -> main@erro(4), main@cLSE(4), main@inicio(4), main@error(4), 
  2338 ;;		 -> main@Open(4), main@on(4), 
  2339 ;;  i               1    7[BANK0 ] unsigned char 
  2340 ;;  elapsed_time    2    4[BANK0 ] unsigned int 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2350 ;;      Params:         0       2       0       0       0
  2351 ;;      Locals:         0       4       0       0       0
  2352 ;;      Temps:          0       2       0       0       0
  2353 ;;      Totals:         0       8       0       0       0
  2354 ;;Total ram usage:        8 bytes
  2355 ;; Hardware stack levels used: 1
  2356 ;; Hardware stack levels required when called: 4
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364     0523                     _display_message:	
  2365                           ;psect for function _display_message
  2366                           
  2367                           
  2368                           ;incstack = 0
  2369                           ; Regs used in _display_message: [wreg-fsr0h+status,2+status,0+btemp+1]
  2370                           ;display_message@message stored from wreg
  2371     0523  1283               	bcf	3,5	;RP0=0, select bank0
  2372     0524  1303               	bcf	3,6	;RP1=0, select bank0
  2373     0525  00A6               	movwf	display_message@message
  2374     0526                     l1425:
  2375                           
  2376                           ;main.c: 164: unsigned int elapsed_time = 0;
  2377     0526  01A4               	clrf	display_message@elapsed_time
  2378     0527  01A5               	clrf	display_message@elapsed_time+1
  2379                           
  2380                           ;main.c: 165: while (elapsed_time < duration_ms) {
  2381     0528  2D54               	goto	l78
  2382     0529                     l1427:
  2383                           
  2384                           ;main.c: 166: for (unsigned char i = 0; i < 4; i++) {
  2385     0529  01A7               	clrf	display_message@i
  2386     052A                     l1433:
  2387                           
  2388                           ;main.c: 167: display_digits[i] = message[i];
  2389     052A  0827               	movf	display_message@i,w
  2390     052B  0726               	addwf	display_message@message,w
  2391     052C  00A2               	movwf	??_display_message
  2392     052D  0822               	movf	??_display_message,w
  2393     052E  0084               	movwf	4
  2394     052F  1383               	bcf	3,7	;select IRP bank0
  2395     0530  0800               	movf	0,w
  2396     0531  00FF               	movwf	btemp+1
  2397     0532  0827               	movf	display_message@i,w
  2398     0533  3E55               	addlw	(low (_display_digits| 0))& (0+255)
  2399     0534  0084               	movwf	4
  2400     0535  087F               	movf	btemp+1,w
  2401     0536  0080               	movwf	0
  2402     0537                     l1435:
  2403     0537  3001               	movlw	1
  2404     0538  00FF               	movwf	btemp+1
  2405     0539  087F               	movf	btemp+1,w
  2406     053A  07A7               	addwf	display_message@i,f
  2407     053B                     l1437:
  2408     053B  3004               	movlw	4
  2409     053C  0227               	subwf	display_message@i,w
  2410     053D  1C03               	skipc
  2411     053E  2D40               	goto	u811
  2412     053F  2D41               	goto	u810
  2413     0540                     u811:
  2414     0540  2D2A               	goto	l1433
  2415     0541                     u810:
  2416     0541                     l1439:
  2417                           
  2418                           ;main.c: 168: };main.c: 169: _delay((unsigned long)((5)*(20000000/4000.0)));
  2419     0541  3021               	movlw	33
  2420     0542  1283               	bcf	3,5	;RP0=0, select bank0
  2421     0543  1303               	bcf	3,6	;RP1=0, select bank0
  2422     0544  00A3               	movwf	??_display_message+1
  2423     0545  3075               	movlw	117
  2424     0546  00A2               	movwf	??_display_message
  2425     0547                     u1617:
  2426     0547  0BA2               	decfsz	??_display_message,f
  2427     0548  2D47               	goto	u1617
  2428     0549  0BA3               	decfsz	??_display_message+1,f
  2429     054A  2D47               	goto	u1617
  2430     054B  2D4C               	nop2
  2431                           
  2432                           ;main.c: 170: elapsed_time += 5;
  2433     054C  3005               	movlw	5
  2434     054D  1283               	bcf	3,5	;RP0=0, select bank0
  2435     054E  1303               	bcf	3,6	;RP1=0, select bank0
  2436     054F  07A4               	addwf	display_message@elapsed_time,f
  2437     0550  1803               	skipnc
  2438     0551  0AA5               	incf	display_message@elapsed_time+1,f
  2439     0552  3000               	movlw	0
  2440     0553  07A5               	addwf	display_message@elapsed_time+1,f
  2441     0554                     l78:
  2442     0554  0821               	movf	display_message@duration_ms+1,w
  2443     0555  0225               	subwf	display_message@elapsed_time+1,w
  2444     0556  1D03               	skipz
  2445     0557  2D5A               	goto	u825
  2446     0558  0820               	movf	display_message@duration_ms,w
  2447     0559  0224               	subwf	display_message@elapsed_time,w
  2448     055A                     u825:
  2449     055A  1C03               	skipc
  2450     055B  2D5D               	goto	u821
  2451     055C  2D5E               	goto	u820
  2452     055D                     u821:
  2453     055D  2D29               	goto	l1427
  2454     055E                     u820:
  2455     055E                     l83:
  2456     055E  0008               	return
  2457     055F                     __end_of_display_message:
  2458                           
  2459                           	psect	text6
  2460     0642                     __ptext6:	
  2461 ;; *************** function _display_init *****************
  2462 ;; Defined at:
  2463 ;;		line 99 in file "main.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, btemp+1
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 4
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491     0642                     _display_init:	
  2492                           ;psect for function _display_init
  2493                           
  2494     0642                     l1411:	
  2495                           ;incstack = 0
  2496                           ; Regs used in _display_init: [wreg+status,2+status,0+btemp+1]
  2497                           
  2498                           
  2499                           ;main.c: 100: TRISA &= 0b11110000;
  2500     0642  30F0               	movlw	240
  2501     0643  00FF               	movwf	btemp+1
  2502     0644  087F               	movf	btemp+1,w
  2503     0645  1683               	bsf	3,5	;RP0=1, select bank1
  2504     0646  1303               	bcf	3,6	;RP1=0, select bank1
  2505     0647  0585               	andwf	5,f	;volatile
  2506     0648                     l1413:
  2507                           
  2508                           ;main.c: 101: TRISC = 0x00;
  2509     0648  0187               	clrf	7	;volatile
  2510     0649                     l1415:
  2511                           
  2512                           ;main.c: 102: PORTA &= 0b11110000;
  2513     0649  30F0               	movlw	240
  2514     064A  00FF               	movwf	btemp+1
  2515     064B  087F               	movf	btemp+1,w
  2516     064C  1283               	bcf	3,5	;RP0=0, select bank0
  2517     064D  1303               	bcf	3,6	;RP1=0, select bank0
  2518     064E  0585               	andwf	5,f	;volatile
  2519                           
  2520                           ;main.c: 103: PORTC = 0x00;
  2521     064F  0187               	clrf	7	;volatile
  2522     0650                     l59:
  2523     0650  0008               	return
  2524     0651                     __end_of_display_init:
  2525                           
  2526                           	psect	text7
  2527     0384                     __ptext7:	
  2528 ;; *************** function _capture_user_input_senha *****************
  2529 ;; Defined at:
  2530 ;;		line 253 in file "main.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  j               1    8[BANK0 ] unsigned char 
  2535 ;;  i               1    7[BANK0 ] unsigned char 
  2536 ;;  i               1    6[BANK0 ] unsigned char 
  2537 ;;  senha           4    0[BANK0 ] unsigned char [4]
  2538 ;;  index           1    5[BANK0 ] unsigned char 
  2539 ;;  senha_valida    1    4[BANK0 ] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      unsigned char 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         0       0       0       0       0
  2550 ;;      Locals:         0       9       0       0       0
  2551 ;;      Temps:          0       0       0       0       0
  2552 ;;      Totals:         0       9       0       0       0
  2553 ;;Total ram usage:        9 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; Hardware stack levels required when called: 5
  2556 ;; This function calls:
  2557 ;;		_clear_display
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563     0384                     _capture_user_input_senha:	
  2564                           ;psect for function _capture_user_input_senha
  2565                           
  2566     0384                     l1489:	
  2567                           ;incstack = 0
  2568                           ; Regs used in _capture_user_input_senha: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  2569                           
  2570                           
  2571                           ;main.c: 254: unsigned char senha_valida = 1;
  2572     0384  1283               	bcf	3,5	;RP0=0, select bank0
  2573     0385  1303               	bcf	3,6	;RP1=0, select bank0
  2574     0386  01A4               	clrf	capture_user_input_senha@senha_valida
  2575     0387  0AA4               	incf	capture_user_input_senha@senha_valida,f
  2576     0388                     l1491:
  2577                           
  2578                           ;main.c: 255: unsigned char senha[4] ;;main.c: 258: for (unsigned char i = 0; i < 4; i++
      +                          ) {
  2579     0388  01A6               	clrf	capture_user_input_senha@i
  2580     0389                     l1497:
  2581                           
  2582                           ;main.c: 259: user_input[i] = 0xFF;
  2583     0389  0826               	movf	capture_user_input_senha@i,w
  2584     038A  3E5F               	addlw	(low (_user_input| 0))& (0+255)
  2585     038B  0084               	movwf	4
  2586     038C  30FF               	movlw	255
  2587     038D  1383               	bcf	3,7	;select IRP bank0
  2588     038E  0080               	movwf	0
  2589                           
  2590                           ;main.c: 260: display_digits[i] = 0xFF;
  2591     038F  0826               	movf	capture_user_input_senha@i,w
  2592     0390  3E55               	addlw	(low (_display_digits| 0))& (0+255)
  2593     0391  0084               	movwf	4
  2594     0392  30FF               	movlw	255
  2595     0393  0080               	movwf	0
  2596     0394                     l1499:
  2597     0394  3001               	movlw	1
  2598     0395  00FF               	movwf	btemp+1
  2599     0396  087F               	movf	btemp+1,w
  2600     0397  07A6               	addwf	capture_user_input_senha@i,f
  2601     0398                     l1501:
  2602     0398  3004               	movlw	4
  2603     0399  0226               	subwf	capture_user_input_senha@i,w
  2604     039A  1C03               	skipc
  2605     039B  2B9D               	goto	u921
  2606     039C  2B9E               	goto	u920
  2607     039D                     u921:
  2608     039D  2B89               	goto	l1497
  2609     039E                     u920:
  2610     039E                     l1503:
  2611                           
  2612                           ;main.c: 261: };main.c: 263: unsigned char index = 0;
  2613     039E  01A5               	clrf	capture_user_input_senha@index
  2614                           
  2615                           ;main.c: 264: while (index < 4) {
  2616     039F  2BDE               	goto	l1533
  2617     03A0                     l1505:
  2618     03A0  086C               	movf	_key_ready,w	;volatile
  2619     03A1  1903               	btfsc	3,2
  2620     03A2  2BA4               	goto	u931
  2621     03A3  2BA5               	goto	u930
  2622     03A4                     u931:
  2623     03A4  2BA0               	goto	l1505
  2624     03A5                     u930:
  2625     03A5                     l1507:
  2626                           
  2627                           ;main.c: 266: key_ready = 0;
  2628     03A5  01EC               	clrf	_key_ready	;volatile
  2629     03A6                     l1509:
  2630                           
  2631                           ;main.c: 269: if (key_pressed == 0x0E || key_pressed == 0x0F) {
  2632     03A6  300E               	movlw	14
  2633     03A7  065E               	xorwf	_key_pressed,w	;volatile
  2634     03A8  1903               	btfsc	3,2
  2635     03A9  2BAB               	goto	u941
  2636     03AA  2BAC               	goto	u940
  2637     03AB                     u941:
  2638     03AB  2BB2               	goto	l1513
  2639     03AC                     u940:
  2640     03AC                     l1511:
  2641     03AC  300F               	movlw	15
  2642     03AD  065E               	xorwf	_key_pressed,w	;volatile
  2643     03AE  1D03               	btfss	3,2
  2644     03AF  2BB1               	goto	u951
  2645     03B0  2BB2               	goto	u950
  2646     03B1                     u951:
  2647     03B1  2BB3               	goto	l1515
  2648     03B2                     u950:
  2649     03B2                     l1513:
  2650                           
  2651                           ;main.c: 270: senha_valida = 0;
  2652     03B2  01A4               	clrf	capture_user_input_senha@senha_valida
  2653     03B3                     l1515:
  2654                           
  2655                           ;main.c: 271: };main.c: 274: for (unsigned char j = 3; j > 0; j--) {
  2656     03B3  3003               	movlw	3
  2657     03B4  00A8               	movwf	capture_user_input_senha@j
  2658     03B5                     l1521:
  2659                           
  2660                           ;main.c: 275: user_input[j] = user_input[j - 1];
  2661     03B5  0828               	movf	capture_user_input_senha@j,w
  2662     03B6  3E5E               	addlw	(low ((_user_input| 0+255)))& (0+255)
  2663     03B7  0084               	movwf	4
  2664     03B8  1383               	bcf	3,7	;select IRP bank0
  2665     03B9  0800               	movf	0,w
  2666     03BA  00FF               	movwf	btemp+1
  2667     03BB  0828               	movf	capture_user_input_senha@j,w
  2668     03BC  3E5F               	addlw	(low (_user_input| 0))& (0+255)
  2669     03BD  0084               	movwf	4
  2670     03BE  087F               	movf	btemp+1,w
  2671     03BF  0080               	movwf	0
  2672                           
  2673                           ;main.c: 276: display_digits[j] = display_digits[j - 1];
  2674     03C0  0828               	movf	capture_user_input_senha@j,w
  2675     03C1  3E54               	addlw	(low ((_display_digits| 0+255)))& (0+255)
  2676     03C2  0084               	movwf	4
  2677     03C3  0800               	movf	0,w
  2678     03C4  00FF               	movwf	btemp+1
  2679     03C5  0828               	movf	capture_user_input_senha@j,w
  2680     03C6  3E55               	addlw	(low (_display_digits| 0))& (0+255)
  2681     03C7  0084               	movwf	4
  2682     03C8  087F               	movf	btemp+1,w
  2683     03C9  0080               	movwf	0
  2684     03CA                     l1523:
  2685     03CA  3001               	movlw	1
  2686     03CB  02A8               	subwf	capture_user_input_senha@j,f
  2687     03CC                     l1525:
  2688     03CC  0828               	movf	capture_user_input_senha@j,w
  2689     03CD  1D03               	btfss	3,2
  2690     03CE  2BD0               	goto	u961
  2691     03CF  2BD1               	goto	u960
  2692     03D0                     u961:
  2693     03D0  2BB5               	goto	l1521
  2694     03D1                     u960:
  2695     03D1                     l1527:
  2696                           
  2697                           ;main.c: 277: };main.c: 280: user_input[0] = key_pressed;
  2698     03D1  085E               	movf	_key_pressed,w	;volatile
  2699     03D2  00DF               	movwf	_user_input
  2700                           
  2701                           ;main.c: 281: display_digits[0] = key_pressed;
  2702     03D3  085E               	movf	_key_pressed,w	;volatile
  2703     03D4  00D5               	movwf	_display_digits	;volatile
  2704     03D5                     l1529:
  2705                           
  2706                           ;main.c: 284: senha[index] = key_pressed;
  2707     03D5  0825               	movf	capture_user_input_senha@index,w
  2708     03D6  3E20               	addlw	(low (capture_user_input_senha@senha| 0))& (0+255)
  2709     03D7  0084               	movwf	4
  2710     03D8  085E               	movf	_key_pressed,w	;volatile
  2711     03D9  0080               	movwf	0
  2712     03DA                     l1531:
  2713                           
  2714                           ;main.c: 286: index++;
  2715     03DA  3001               	movlw	1
  2716     03DB  00FF               	movwf	btemp+1
  2717     03DC  087F               	movf	btemp+1,w
  2718     03DD  07A5               	addwf	capture_user_input_senha@index,f
  2719     03DE                     l1533:
  2720     03DE  3004               	movlw	4
  2721     03DF  0225               	subwf	capture_user_input_senha@index,w
  2722     03E0  1C03               	skipc
  2723     03E1  2BE3               	goto	u971
  2724     03E2  2BE4               	goto	u970
  2725     03E3                     u971:
  2726     03E3  2BA0               	goto	l1505
  2727     03E4                     u970:
  2728     03E4                     l1535:
  2729                           
  2730                           ;main.c: 287: };main.c: 288: key_ready = 0;
  2731     03E4  01EC               	clrf	_key_ready	;volatile
  2732                           
  2733                           ;main.c: 290: while (key_pressed != 0x0F) {
  2734     03E5  2BEC               	goto	l1541
  2735     03E6                     l1537:
  2736     03E6  086C               	movf	_key_ready,w	;volatile
  2737     03E7  1903               	btfsc	3,2
  2738     03E8  2BEA               	goto	u981
  2739     03E9  2BEB               	goto	u980
  2740     03EA                     u981:
  2741     03EA  2BE6               	goto	l1537
  2742     03EB                     u980:
  2743     03EB  2BE4               	goto	l1535
  2744     03EC                     l1541:
  2745     03EC  300F               	movlw	15
  2746     03ED  065E               	xorwf	_key_pressed,w	;volatile
  2747     03EE  1D03               	btfss	3,2
  2748     03EF  2BF1               	goto	u991
  2749     03F0  2BF2               	goto	u990
  2750     03F1                     u991:
  2751     03F1  2BE6               	goto	l1537
  2752     03F2                     u990:
  2753     03F2                     l1543:
  2754                           
  2755                           ;main.c: 293: };main.c: 295: clear_display();
  2756     03F2  120A  118A  2673  120A  118A  	fcall	_clear_display
  2757     03F7                     l1545:
  2758                           
  2759                           ;main.c: 298: for (unsigned char i = 0; i < 4; i++) {
  2760     03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2761     03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2762     03F9  01A7               	clrf	capture_user_input_senha@i_115
  2763     03FA                     l1551:
  2764                           
  2765                           ;main.c: 299: password[i] = senha[i];
  2766     03FA  0827               	movf	capture_user_input_senha@i_115,w
  2767     03FB  3E20               	addlw	(low (capture_user_input_senha@senha| 0))& (0+255)
  2768     03FC  0084               	movwf	4
  2769     03FD  1383               	bcf	3,7	;select IRP bank0
  2770     03FE  0800               	movf	0,w
  2771     03FF  00FF               	movwf	btemp+1
  2772     0400  0827               	movf	capture_user_input_senha@i_115,w
  2773     0401  3E59               	addlw	(low (_password| 0))& (0+255)
  2774     0402  0084               	movwf	4
  2775     0403  087F               	movf	btemp+1,w
  2776     0404  0080               	movwf	0
  2777     0405                     l1553:
  2778     0405  3001               	movlw	1
  2779     0406  00FF               	movwf	btemp+1
  2780     0407  087F               	movf	btemp+1,w
  2781     0408  07A7               	addwf	capture_user_input_senha@i_115,f
  2782     0409                     l1555:
  2783     0409  3004               	movlw	4
  2784     040A  0227               	subwf	capture_user_input_senha@i_115,w
  2785     040B  1C03               	skipc
  2786     040C  2C0E               	goto	u1001
  2787     040D  2C0F               	goto	u1000
  2788     040E                     u1001:
  2789     040E  2BFA               	goto	l1551
  2790     040F                     u1000:
  2791     040F                     l1557:
  2792                           
  2793                           ;main.c: 300: };main.c: 301: return senha_valida;
  2794     040F  0824               	movf	capture_user_input_senha@senha_valida,w
  2795     0410                     l142:
  2796     0410  0008               	return
  2797     0411                     __end_of_capture_user_input_senha:
  2798                           
  2799                           	psect	text8
  2800     0673                     __ptext8:	
  2801 ;; *************** function _clear_display *****************
  2802 ;; Defined at:
  2803 ;;		line 156 in file "main.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		status,2
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2817 ;;      Params:         0       0       0       0       0
  2818 ;;      Locals:         0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0
  2820 ;;      Totals:         0       0       0       0       0
  2821 ;;Total ram usage:        0 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; Hardware stack levels required when called: 4
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_capture_user_input_senha
  2828 ;;		_verifica_senha
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833     0673                     _clear_display:	
  2834                           ;psect for function _clear_display
  2835                           
  2836     0673                     l1393:	
  2837                           ;incstack = 0
  2838                           ; Regs used in _clear_display: [status,2]
  2839                           
  2840                           
  2841                           ;main.c: 158: PORTC = 0x00;
  2842     0673  1283               	bcf	3,5	;RP0=0, select bank0
  2843     0674  1303               	bcf	3,6	;RP1=0, select bank0
  2844     0675  0187               	clrf	7	;volatile
  2845                           
  2846                           ;main.c: 159: PORTA = 0x00;
  2847     0676  0185               	clrf	5	;volatile
  2848     0677                     l75:
  2849     0677  0008               	return
  2850     0678                     __end_of_clear_display:
  2851                           
  2852                           	psect	text9
  2853     055F                     __ptext9:	
  2854 ;; *************** function _ISR *****************
  2855 ;; Defined at:
  2856 ;;		line 405 in file "main.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2870 ;;      Params:         0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0
  2872 ;;      Temps:          4       0       0       0       0
  2873 ;;      Totals:         4       0       0       0       0
  2874 ;;Total ram usage:        4 bytes
  2875 ;; Hardware stack levels used: 1
  2876 ;; Hardware stack levels required when called: 3
  2877 ;; This function calls:
  2878 ;;		_get_key_combined
  2879 ;;		_update_display
  2880 ;; This function is called by:
  2881 ;;		Interrupt level 1
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885     055F                     _ISR:	
  2886                           ;psect for function _ISR
  2887                           
  2888     055F                     i1l1713:
  2889                           
  2890                           ;main.c: 406: if (TMR0IE && TMR0IF) {
  2891     055F  1E8B               	btfss	11,5	;volatile
  2892     0560  2D62               	goto	u127_21
  2893     0561  2D63               	goto	u127_20
  2894     0562                     u127_21:
  2895     0562  2D8E               	goto	i1l208
  2896     0563                     u127_20:
  2897     0563                     i1l1715:
  2898     0563  1D0B               	btfss	11,2	;volatile
  2899     0564  2D66               	goto	u128_21
  2900     0565  2D67               	goto	u128_20
  2901     0566                     u128_21:
  2902     0566  2D8E               	goto	i1l208
  2903     0567                     u128_20:
  2904     0567                     i1l1717:
  2905                           
  2906                           ;main.c: 407: static int tick1 = 0;;main.c: 411: hold_counter++;
  2907     0567  3001               	movlw	1
  2908     0568  1283               	bcf	3,5	;RP0=0, select bank0
  2909     0569  1303               	bcf	3,6	;RP1=0, select bank0
  2910     056A  07E9               	addwf	_hold_counter,f	;volatile
  2911     056B  1803               	skipnc
  2912     056C  0AEA               	incf	_hold_counter+1,f	;volatile
  2913     056D  3000               	movlw	0
  2914     056E  07EA               	addwf	_hold_counter+1,f	;volatile
  2915     056F                     i1l1719:
  2916                           
  2917                           ;main.c: 414: update_display();
  2918     056F  120A  118A  25E7  120A  118A  	fcall	_update_display
  2919     0574                     i1l1721:
  2920                           
  2921                           ;main.c: 417: if(tick1 ==1){
  2922     0574  1283               	bcf	3,5	;RP0=0, select bank0
  2923     0575  1303               	bcf	3,6	;RP1=0, select bank0
  2924     0576  0363               	decf	ISR@tick1,w
  2925     0577  0464               	iorwf	ISR@tick1+1,w
  2926     0578  1D03               	btfss	3,2
  2927     0579  2D7B               	goto	u129_21
  2928     057A  2D7C               	goto	u129_20
  2929     057B                     u129_21:
  2930     057B  2D85               	goto	i1l1727
  2931     057C                     u129_20:
  2932     057C                     i1l1723:
  2933                           
  2934                           ;main.c: 419: get_key_combined();
  2935     057C  120A  118A  2411  120A  118A  	fcall	_get_key_combined
  2936     0581                     i1l1725:
  2937                           
  2938                           ;main.c: 420: tick1 = 0;
  2939     0581  1283               	bcf	3,5	;RP0=0, select bank0
  2940     0582  1303               	bcf	3,6	;RP1=0, select bank0
  2941     0583  01E3               	clrf	ISR@tick1
  2942     0584  01E4               	clrf	ISR@tick1+1
  2943     0585                     i1l1727:
  2944                           
  2945                           ;main.c: 421: };main.c: 422: tick1++;
  2946     0585  3001               	movlw	1
  2947     0586  07E3               	addwf	ISR@tick1,f
  2948     0587  1803               	skipnc
  2949     0588  0AE4               	incf	ISR@tick1+1,f
  2950     0589  3000               	movlw	0
  2951     058A  07E4               	addwf	ISR@tick1+1,f
  2952     058B                     i1l1729:
  2953                           
  2954                           ;main.c: 424: TMR0IF = 0;
  2955     058B  110B               	bcf	11,2	;volatile
  2956     058C                     i1l1731:
  2957                           
  2958                           ;main.c: 425: TMR0 = 0xff - 195;
  2959     058C  303C               	movlw	60
  2960     058D  0081               	movwf	1	;volatile
  2961     058E                     i1l208:
  2962     058E  0879               	movf	??_ISR+3,w
  2963     058F  00FF               	movwf	btemp+1
  2964     0590  0878               	movf	??_ISR+2,w
  2965     0591  008A               	movwf	10
  2966     0592  0877               	movf	??_ISR+1,w
  2967     0593  0084               	movwf	4
  2968     0594  0E76               	swapf	??_ISR,w
  2969     0595  0083               	movwf	3
  2970     0596  0EFE               	swapf	btemp,f
  2971     0597  0E7E               	swapf	btemp,w
  2972     0598  0009               	retfie
  2973     0599                     __end_of_ISR:
  2974                           
  2975                           	psect	intentry
  2976     0004                     __pintentry:	
  2977                           ;incstack = 0
  2978                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2979                           
  2980     0004                     interrupt_function:
  2981     007E                     saved_w	set	btemp
  2982     0004  00FE               	movwf	btemp
  2983     0005  0E03               	swapf	3,w
  2984     0006  00F6               	movwf	??_ISR
  2985     0007  0804               	movf	4,w
  2986     0008  00F7               	movwf	??_ISR+1
  2987     0009  080A               	movf	10,w
  2988     000A  00F8               	movwf	??_ISR+2
  2989     000B  087F               	movf	btemp+1,w
  2990     000C  00F9               	movwf	??_ISR+3
  2991     000D  120A  118A  2D5F   	ljmp	_ISR
  2992                           
  2993                           	psect	text10
  2994     05E7                     __ptext10:	
  2995 ;; *************** function _update_display *****************
  2996 ;; Defined at:
  2997 ;;		line 143 in file "main.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         0       0       0       0       0
  3012 ;;      Locals:         0       0       0       0       0
  3013 ;;      Temps:          0       0       0       0       0
  3014 ;;      Totals:         0       0       0       0       0
  3015 ;;Total ram usage:        0 bytes
  3016 ;; Hardware stack levels used: 1
  3017 ;; Hardware stack levels required when called: 2
  3018 ;; This function calls:
  3019 ;;		_display_digit
  3020 ;; This function is called by:
  3021 ;;		_ISR
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025     05E7                     _update_display:	
  3026                           ;psect for function _update_display
  3027                           
  3028     05E7                     i1l1417:	
  3029                           ;incstack = 0
  3030                           ; Regs used in _update_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3031                           
  3032                           
  3033                           ;main.c: 144: static unsigned char digit_position = 0;;main.c: 147: PORTC = 0x00;
  3034     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  3035     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  3036     05E9  0187               	clrf	7	;volatile
  3037                           
  3038                           ;main.c: 148: PORTA = 0x00;
  3039     05EA  0185               	clrf	5	;volatile
  3040     05EB                     i1l1419:
  3041                           
  3042                           ;main.c: 150: if (display_digits[digit_position] != 0xFF) {
  3043     05EB  087B               	movf	update_display@digit_position,w
  3044     05EC  3E55               	addlw	(low (_display_digits| 0))& (0+255)
  3045     05ED  0084               	movwf	4
  3046     05EE  1383               	bcf	3,7	;select IRP bank0
  3047     05EF  0A00               	incf	0,w
  3048     05F0  1903               	btfsc	3,2
  3049     05F1  2DF3               	goto	u80_21
  3050     05F2  2DF4               	goto	u80_20
  3051     05F3                     u80_21:
  3052     05F3  2DFF               	goto	i1l1423
  3053     05F4                     u80_20:
  3054     05F4                     i1l1421:
  3055                           
  3056                           ;main.c: 151: display_digit(display_digits[digit_position], digit_position);
  3057     05F4  087B               	movf	update_display@digit_position,w
  3058     05F5  00F0               	movwf	display_digit@position
  3059     05F6  087B               	movf	update_display@digit_position,w
  3060     05F7  3E55               	addlw	(low (_display_digits| 0))& (0+255)
  3061     05F8  0084               	movwf	4
  3062     05F9  0800               	movf	0,w
  3063     05FA  120A  118A  25C4  120A  118A  	fcall	_display_digit
  3064     05FF                     i1l1423:
  3065                           
  3066                           ;main.c: 152: };main.c: 153: digit_position = (digit_position + 1) % 4;
  3067     05FF  087B               	movf	update_display@digit_position,w
  3068     0600  3E01               	addlw	1
  3069     0601  3903               	andlw	3
  3070     0602  00FB               	movwf	update_display@digit_position
  3071     0603                     i1l72:
  3072     0603  0008               	return
  3073     0604                     __end_of_update_display:
  3074                           
  3075                           	psect	text11
  3076     05C4                     __ptext11:	
  3077 ;; *************** function _display_digit *****************
  3078 ;; Defined at:
  3079 ;;		line 109 in file "main.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  digit           1    wreg     unsigned char 
  3082 ;;  position        1    0[COMMON] unsigned char 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  digit           1    3[COMMON] unsigned char 
  3085 ;;  segment_code    1    2[COMMON] unsigned char 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3095 ;;      Params:         1       0       0       0       0
  3096 ;;      Locals:         2       0       0       0       0
  3097 ;;      Temps:          1       0       0       0       0
  3098 ;;      Totals:         4       0       0       0       0
  3099 ;;Total ram usage:        4 bytes
  3100 ;; Hardware stack levels used: 2
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_update_display
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108     05C4                     _display_digit:	
  3109                           ;psect for function _display_digit
  3110                           
  3111                           
  3112                           ;incstack = 0
  3113                           ; Regs used in _display_digit: [wreg-fsr0h+status,2+status,0+pclath]
  3114                           ;display_digit@digit stored from wreg
  3115     05C4  00F3               	movwf	display_digit@digit
  3116     05C5                     i1l1385:
  3117                           
  3118                           ;main.c: 110: const unsigned char segment_map[19] = {;main.c: 111: 0b00111111,;main.c: 1
      +                          12: 0b00000110,;main.c: 113: 0b01011011,;main.c: 114: 0b01001111,;main.c: 115: 0b0110011
      +                          0,;main.c: 116: 0b01101101,;main.c: 117: 0b01111101,;main.c: 118: 0b00000111,;main.c: 11
      +                          9: 0b01111111,;main.c: 120: 0b01101111,;main.c: 121: 0b01111001,;main.c: 122: 0b01010000
      +                          ,;main.c: 123: 0b00111000,;main.c: 124: 0b01011000,;main.c: 125: 0b01010100,;main.c: 126
      +                          : 0b01000000,;main.c: 127: 0b01011100,;main.c: 128: 0b00000000,;main.c: 129: 0b01110011
  3119     05C5  3014               	movlw	20
  3120     05C6  0273               	subwf	display_digit@digit,w
  3121     05C7  1803               	skipnc
  3122     05C8  2DCA               	goto	u76_21
  3123     05C9  2DCB               	goto	u76_20
  3124     05CA                     u76_21:
  3125     05CA  2DD5               	goto	i1l1389
  3126     05CB                     u76_20:
  3127     05CB                     i1l1387:
  3128                           
  3129                           ;main.c: 134: segment_code = segment_map[digit];
  3130     05CB  0873               	movf	display_digit@digit,w
  3131     05CC  3E01               	addlw	low ((display_digit@segment_map-__stringbase)| (0+32768))
  3132     05CD  0084               	movwf	4
  3133     05CE  120A  118A  2599  120A  118A  	fcall	stringdir
  3134     05D3  00F2               	movwf	display_digit@segment_code
  3135                           
  3136                           ;main.c: 135: } else {
  3137     05D4  2DD7               	goto	i1l65
  3138     05D5                     i1l1389:
  3139                           
  3140                           ;main.c: 136: segment_code = 0b01000000;
  3141     05D5  3040               	movlw	64
  3142     05D6  00F2               	movwf	display_digit@segment_code
  3143     05D7                     i1l65:
  3144                           
  3145                           ;main.c: 137: };main.c: 138: PORTC = segment_code;
  3146     05D7  0872               	movf	display_digit@segment_code,w
  3147     05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3148     05D9  1303               	bcf	3,6	;RP1=0, select bank0
  3149     05DA  0087               	movwf	7	;volatile
  3150     05DB                     i1l1391:
  3151                           
  3152                           ;main.c: 139: PORTA = (1 << position);
  3153     05DB  3001               	movlw	1
  3154     05DC  00F1               	movwf	??_display_digit
  3155     05DD  0A70               	incf	display_digit@position,w
  3156     05DE  2DE1               	goto	u77_24
  3157     05DF                     u77_25:
  3158     05DF  1003               	clrc
  3159     05E0  0DF1               	rlf	??_display_digit,f
  3160     05E1                     u77_24:
  3161     05E1  3EFF               	addlw	-1
  3162     05E2  1D03               	skipz
  3163     05E3  2DDF               	goto	u77_25
  3164     05E4  0871               	movf	??_display_digit,w
  3165     05E5  0085               	movwf	5	;volatile
  3166     05E6                     i1l66:
  3167     05E6  0008               	return
  3168     05E7                     __end_of_display_digit:
  3169                           
  3170                           	psect	text12
  3171     0411                     __ptext12:	
  3172 ;; *************** function _get_key_combined *****************
  3173 ;; Defined at:
  3174 ;;		line 183 in file "main.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  current_key     1    4[COMMON] unsigned char 
  3179 ;;  col             1    5[COMMON] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         0       0       0       0       0
  3190 ;;      Locals:         2       0       0       0       0
  3191 ;;      Temps:          1       0       0       0       0
  3192 ;;      Totals:         3       0       0       0       0
  3193 ;;Total ram usage:        3 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 1
  3196 ;; This function calls:
  3197 ;;		___bmul
  3198 ;; This function is called by:
  3199 ;;		_ISR
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203     0411                     _get_key_combined:	
  3204                           ;psect for function _get_key_combined
  3205                           
  3206     0411                     i1l1441:	
  3207                           ;incstack = 0
  3208                           ; Regs used in _get_key_combined: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3209                           
  3210                           
  3211                           ;main.c: 184: static unsigned char row = 0;;main.c: 185: static unsigned char last_key_p
      +                          ressed = 0xFF;;main.c: 186: static unsigned int debounce_counter = 0;;main.c: 187: stati
      +                          c unsigned char debounce_state = 0;;main.c: 190: TRISB = 0xF0;
  3212     0411  30F0               	movlw	240
  3213     0412  1683               	bsf	3,5	;RP0=1, select bank1
  3214     0413  1303               	bcf	3,6	;RP1=0, select bank1
  3215     0414  0086               	movwf	6	;volatile
  3216     0415                     i1l1443:
  3217                           
  3218                           ;main.c: 192: PORTB = ~(1 << row);
  3219     0415  3001               	movlw	1
  3220     0416  00F3               	movwf	??_get_key_combined
  3221     0417  0A7C               	incf	get_key_combined@row,w
  3222     0418  2C1B               	goto	u83_24
  3223     0419                     u83_25:
  3224     0419  1003               	clrc
  3225     041A  0DF3               	rlf	??_get_key_combined,f
  3226     041B                     u83_24:
  3227     041B  3EFF               	addlw	-1
  3228     041C  1D03               	skipz
  3229     041D  2C19               	goto	u83_25
  3230     041E  0873               	movf	??_get_key_combined,w
  3231     041F  3AFF               	xorlw	255
  3232     0420  1283               	bcf	3,5	;RP0=0, select bank0
  3233     0421  1303               	bcf	3,6	;RP1=0, select bank0
  3234     0422  0086               	movwf	6	;volatile
  3235     0423                     i1l1445:
  3236                           
  3237                           ;main.c: 193: _delay((unsigned long)((5)*(20000000/4000000.0)));
  3238     0423  3008               	movlw	8
  3239     0424  00F3               	movwf	??_get_key_combined
  3240     0425                     u162_27:
  3241     0425  0BF3               	decfsz	??_get_key_combined,f
  3242     0426  2C25               	goto	u162_27
  3243     0427                     i1l1447:
  3244                           
  3245                           ;main.c: 195: for (unsigned char col = 0; col < 4; col++) {
  3246     0427  01F5               	clrf	get_key_combined@col
  3247     0428                     i1l1453:
  3248                           
  3249                           ;main.c: 196: if (!(PORTB & (1 << (col + 4)))) {
  3250     0428  3001               	movlw	1
  3251     0429  00F3               	movwf	??_get_key_combined
  3252     042A  0875               	movf	get_key_combined@col,w
  3253     042B  3E04               	addlw	4
  3254     042C  3E01               	addlw	1
  3255     042D  2C30               	goto	u84_24
  3256     042E                     u84_25:
  3257     042E  1003               	clrc
  3258     042F  0DF3               	rlf	??_get_key_combined,f
  3259     0430                     u84_24:
  3260     0430  3EFF               	addlw	-1
  3261     0431  1D03               	skipz
  3262     0432  2C2E               	goto	u84_25
  3263     0433  0873               	movf	??_get_key_combined,w
  3264     0434  1283               	bcf	3,5	;RP0=0, select bank0
  3265     0435  1303               	bcf	3,6	;RP1=0, select bank0
  3266     0436  0506               	andwf	6,w	;volatile
  3267     0437  1D03               	btfss	3,2
  3268     0438  2C3A               	goto	u85_21
  3269     0439  2C3B               	goto	u85_20
  3270     043A                     u85_21:
  3271     043A  2C84               	goto	i1l1477
  3272     043B                     u85_20:
  3273     043B                     i1l1455:
  3274                           
  3275                           ;main.c: 197: unsigned char current_key = key_map[row][col];
  3276     043B  3003               	movlw	3
  3277     043C  00F0               	movwf	___bmul@multiplicand
  3278     043D  087C               	movf	get_key_combined@row,w
  3279     043E  120A  118A  261A  120A  118A  	fcall	___bmul
  3280     0443  3E14               	addlw	low ((_key_map-__stringbase)| (0+32768))
  3281     0444  0775               	addwf	get_key_combined@col,w
  3282     0445  0084               	movwf	4
  3283     0446  120A  118A  2599  120A  118A  	fcall	stringdir
  3284     044B  00F4               	movwf	get_key_combined@current_key
  3285     044C                     i1l1457:
  3286                           
  3287                           ;main.c: 199: if (current_key != last_key_pressed) {
  3288     044C  0874               	movf	get_key_combined@current_key,w
  3289     044D  067D               	xorwf	get_key_combined@last_key_pressed,w
  3290     044E  1903               	skipnz
  3291     044F  2C51               	goto	u86_21
  3292     0450  2C52               	goto	u86_20
  3293     0451                     u86_21:
  3294     0451  2C5A               	goto	i1l1463
  3295     0452                     u86_20:
  3296     0452                     i1l1459:
  3297                           
  3298                           ;main.c: 200: debounce_counter = 0;
  3299     0452  1283               	bcf	3,5	;RP0=0, select bank0
  3300     0453  1303               	bcf	3,6	;RP1=0, select bank0
  3301     0454  01E7               	clrf	get_key_combined@debounce_counter
  3302     0455  01E8               	clrf	get_key_combined@debounce_counter+1
  3303                           
  3304                           ;main.c: 201: debounce_state = 0;
  3305     0456  01FA               	clrf	get_key_combined@debounce_state
  3306     0457                     i1l1461:
  3307                           
  3308                           ;main.c: 202: last_key_pressed = current_key;
  3309     0457  0874               	movf	get_key_combined@current_key,w
  3310     0458  00FD               	movwf	get_key_combined@last_key_pressed
  3311                           
  3312                           ;main.c: 203: } else {
  3313     0459  2C9C               	goto	i1l105
  3314     045A                     i1l1463:
  3315                           
  3316                           ;main.c: 204: if (debounce_state == 0) {
  3317     045A  087A               	movf	get_key_combined@debounce_state,w
  3318     045B  1D03               	btfss	3,2
  3319     045C  2C5E               	goto	u87_21
  3320     045D  2C5F               	goto	u87_20
  3321     045E                     u87_21:
  3322     045E  2C68               	goto	i1l1469
  3323     045F                     u87_20:
  3324     045F                     i1l1465:
  3325                           
  3326                           ;main.c: 205: key_pressed = current_key;
  3327     045F  0874               	movf	get_key_combined@current_key,w
  3328     0460  1283               	bcf	3,5	;RP0=0, select bank0
  3329     0461  1303               	bcf	3,6	;RP1=0, select bank0
  3330     0462  00DE               	movwf	_key_pressed	;volatile
  3331                           
  3332                           ;main.c: 206: key_ready = 1;
  3333     0463  3001               	movlw	1
  3334     0464  00EC               	movwf	_key_ready	;volatile
  3335     0465                     i1l1467:
  3336                           
  3337                           ;main.c: 207: debounce_state = 1;
  3338     0465  01FA               	clrf	get_key_combined@debounce_state
  3339     0466  0AFA               	incf	get_key_combined@debounce_state,f
  3340                           
  3341                           ;main.c: 208: } else if (debounce_state == 1) {
  3342     0467  2C9C               	goto	i1l105
  3343     0468                     i1l1469:
  3344     0468  037A               	decf	get_key_combined@debounce_state,w
  3345     0469  1D03               	btfss	3,2
  3346     046A  2C6C               	goto	u88_21
  3347     046B  2C6D               	goto	u88_20
  3348     046C                     u88_21:
  3349     046C  2C9C               	goto	i1l105
  3350     046D                     u88_20:
  3351     046D                     i1l1471:
  3352                           
  3353                           ;main.c: 209: debounce_counter++;
  3354     046D  3001               	movlw	1
  3355     046E  1283               	bcf	3,5	;RP0=0, select bank0
  3356     046F  1303               	bcf	3,6	;RP1=0, select bank0
  3357     0470  07E7               	addwf	get_key_combined@debounce_counter,f
  3358     0471  1803               	skipnc
  3359     0472  0AE8               	incf	get_key_combined@debounce_counter+1,f
  3360     0473  3000               	movlw	0
  3361     0474  07E8               	addwf	get_key_combined@debounce_counter+1,f
  3362                           
  3363                           ;main.c: 210: if (debounce_counter >= 20) {
  3364     0475  3000               	movlw	0
  3365     0476  0268               	subwf	get_key_combined@debounce_counter+1,w
  3366     0477  3014               	movlw	20
  3367     0478  1903               	skipnz
  3368     0479  0267               	subwf	get_key_combined@debounce_counter,w
  3369     047A  1C03               	skipc
  3370     047B  2C7D               	goto	u89_21
  3371     047C  2C7E               	goto	u89_20
  3372     047D                     u89_21:
  3373     047D  2C83               	goto	i1l100
  3374     047E                     u89_20:
  3375     047E                     i1l1473:
  3376                           
  3377                           ;main.c: 211: current_key_pressed = current_key;
  3378     047E  0874               	movf	get_key_combined@current_key,w
  3379     047F  00DD               	movwf	_current_key_pressed	;volatile
  3380                           
  3381                           ;main.c: 212: debounce_state = 2;
  3382     0480  3002               	movlw	2
  3383     0481  00FA               	movwf	get_key_combined@debounce_state
  3384     0482  2C9C               	goto	i1l105
  3385     0483                     i1l100:
  3386     0483  2C9C               	goto	i1l105
  3387     0484                     i1l1477:
  3388     0484  3001               	movlw	1
  3389     0485  00FF               	movwf	btemp+1
  3390     0486  087F               	movf	btemp+1,w
  3391     0487  07F5               	addwf	get_key_combined@col,f
  3392     0488                     i1l1479:
  3393     0488  3004               	movlw	4
  3394     0489  0275               	subwf	get_key_combined@col,w
  3395     048A  1C03               	skipc
  3396     048B  2C8D               	goto	u90_21
  3397     048C  2C8E               	goto	u90_20
  3398     048D                     u90_21:
  3399     048D  2C28               	goto	i1l1453
  3400     048E                     u90_20:
  3401     048E                     i1l1481:
  3402                           
  3403                           ;main.c: 217: };main.c: 218: };main.c: 221: row = (row + 1) % 4;
  3404     048E  087C               	movf	get_key_combined@row,w
  3405     048F  3E01               	addlw	1
  3406     0490  3903               	andlw	3
  3407     0491  00FC               	movwf	get_key_combined@row
  3408                           
  3409                           ;main.c: 222: if (row == 0) {
  3410     0492  087C               	movf	get_key_combined@row,w
  3411     0493  1D03               	btfss	3,2
  3412     0494  2C96               	goto	u91_21
  3413     0495  2C97               	goto	u91_20
  3414     0496                     u91_21:
  3415     0496  2C9C               	goto	i1l105
  3416     0497                     u91_20:
  3417     0497                     i1l1483:
  3418                           
  3419                           ;main.c: 223: last_key_pressed = 0xFF;
  3420     0497  30FF               	movlw	255
  3421     0498  00FD               	movwf	get_key_combined@last_key_pressed
  3422     0499                     i1l1485:
  3423                           
  3424                           ;main.c: 224: debounce_counter = 0;
  3425     0499  01E7               	clrf	get_key_combined@debounce_counter
  3426     049A  01E8               	clrf	get_key_combined@debounce_counter+1
  3427     049B                     i1l1487:
  3428                           
  3429                           ;main.c: 225: debounce_state = 0;
  3430     049B  01FA               	clrf	get_key_combined@debounce_state
  3431     049C                     i1l105:
  3432     049C  0008               	return
  3433     049D                     __end_of_get_key_combined:
  3434                           
  3435                           	psect	text13
  3436     061A                     __ptext13:	
  3437 ;; *************** function ___bmul *****************
  3438 ;; Defined at:
  3439 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\Umul8.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  multiplier      1    wreg     unsigned char 
  3442 ;;  multiplicand    1    0[COMMON] unsigned char 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  multiplier      1    2[COMMON] unsigned char 
  3445 ;;  product         1    1[COMMON] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      unsigned char 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0, btemp+1
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3455 ;;      Params:         1       0       0       0       0
  3456 ;;      Locals:         2       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0
  3458 ;;      Totals:         3       0       0       0       0
  3459 ;;Total ram usage:        3 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_get_key_combined
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468     061A                     ___bmul:	
  3469                           ;psect for function ___bmul
  3470                           
  3471                           
  3472                           ;incstack = 0
  3473                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  3474                           ;___bmul@multiplier stored from wreg
  3475     061A  00F2               	movwf	___bmul@multiplier
  3476     061B                     i1l1395:
  3477     061B  01F1               	clrf	___bmul@product
  3478     061C                     i1l1397:
  3479     061C  1C72               	btfss	___bmul@multiplier,0
  3480     061D  2E1F               	goto	u78_21
  3481     061E  2E20               	goto	u78_20
  3482     061F                     u78_21:
  3483     061F  2E24               	goto	i1l1401
  3484     0620                     u78_20:
  3485     0620                     i1l1399:
  3486     0620  0870               	movf	___bmul@multiplicand,w
  3487     0621  00FF               	movwf	btemp+1
  3488     0622  087F               	movf	btemp+1,w
  3489     0623  07F1               	addwf	___bmul@product,f
  3490     0624                     i1l1401:
  3491     0624  1003               	clrc
  3492     0625  0DF0               	rlf	___bmul@multiplicand,f
  3493     0626                     i1l1403:
  3494     0626  1003               	clrc
  3495     0627  0CF2               	rrf	___bmul@multiplier,f
  3496     0628                     i1l1405:
  3497     0628  0872               	movf	___bmul@multiplier,w
  3498     0629  1D03               	btfss	3,2
  3499     062A  2E2C               	goto	u79_21
  3500     062B  2E2D               	goto	u79_20
  3501     062C                     u79_21:
  3502     062C  2E1C               	goto	i1l1397
  3503     062D                     u79_20:
  3504     062D                     i1l1407:
  3505     062D  0871               	movf	___bmul@product,w
  3506     062E                     i1l381:
  3507     062E  0008               	return
  3508     062F                     __end_of___bmul:
  3509     007E                     btemp	set	126	;btemp
  3510     007E                     wtemp0	set	126
  3511                           
  3512                           	psect	config
  3513                           
  3514                           ;Config register CONFIG1 @ 0x2007
  3515                           ;	Oscillator Selection bits
  3516                           ;	FOSC = EC, EC: I/O function on RA6/OSC2/CLKOUT pin, CLKIN on RA7/OSC1/CLKIN
  3517                           ;	Watchdog Timer Enable bit
  3518                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3519                           ;	Power-up Timer Enable bit
  3520                           ;	PWRTE = OFF, PWRT disabled
  3521                           ;	RE3/MCLR pin function select bit
  3522                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3523                           ;	Code Protection bit
  3524                           ;	CP = OFF, Program memory code protection is disabled
  3525                           ;	Data Code Protection bit
  3526                           ;	CPD = OFF, Data memory code protection is disabled
  3527                           ;	Brown Out Reset Selection bits
  3528                           ;	BOREN = ON, BOR enabled
  3529                           ;	Internal External Switchover bit
  3530                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3531                           ;	Fail-Safe Clock Monitor Enabled bit
  3532                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3533                           ;	Low Voltage Programming Enable bit
  3534                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3535                           ;	In-Circuit Debugger Mode bit
  3536                           ;	DEBUG = 0x1, unprogrammed default
  3537     2007                     	org	8199
  3538     2007  2FF3               	dw	12275
  3539                           
  3540                           ;Config register CONFIG2 @ 0x2008
  3541                           ;	Brown-out Reset Selection bit
  3542                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3543                           ;	Flash Program Memory Self Write Enable bits
  3544                           ;	WRT = OFF, Write protection off
  3545     2008                     	org	8200
  3546     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    37
    Data        31
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     41      77
    BANK1            80      0      12
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display_message@message	PTR const unsigned char  size(1) Largest target is 4
		 -> main@cLSE(BANK0[4]), main@erro(BANK0[4]), main@error(BANK0[4]), main@inicio(BANK0[4]), 
		 -> main@on(BANK0[4]), main@Open(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_get_key_combined
    _update_display->_display_digit
    _get_key_combined->___bmul

Critical Paths under _main in BANK0

    _main->_stepper_set
    _main->_verifica_senha

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0    2380
                                             10 BANK0     31    31      0
           _capture_user_input_senha
                      _clear_display
                       _display_init
                    _display_message
                       _stepper_init
                        _stepper_set
                            _t0_init
                     _verifica_senha
 ---------------------------------------------------------------------------------
 (1) _verifica_senha                                      10    10      0     431
                                              0 BANK0     10    10      0
                      _clear_display
 ---------------------------------------------------------------------------------
 (1) _t0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _stepper_set                                         10     6      4     442
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _stepper_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_message                                      8     6      2     812
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _display_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _capture_user_input_senha                             9     9      0     431
                                              0 BANK0      9     9      0
                      _clear_display
 ---------------------------------------------------------------------------------
 (2) _clear_display                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     463
                                              6 COMMON     4     4      0
                   _get_key_combined
                     _update_display
 ---------------------------------------------------------------------------------
 (4) _update_display                                       0     0      0     166
                      _display_digit
 ---------------------------------------------------------------------------------
 (6) _display_digit                                        4     3      1     166
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _get_key_combined                                     3     3      0     297
                                              3 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               3     2      1     118
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _capture_user_input_senha
     _clear_display
   _clear_display
   _display_init
   _display_message
   _stepper_init
   _stepper_set
   _t0_init
   _verifica_senha
     _clear_display

 _ISR (ROOT)
   _get_key_combined
     ___bmul
   _update_display
     _display_digit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       C       7       15.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      67      12        0.0%
ABS                  0      0      67       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jul 03 21:25:24 2024

                                   pc 0002                        ___bmul@product 0071  
                                  l75 0677                                    l59 0650  
                                  l83 055E                                    l78 0554  
                                  fsr 0004                        _update_display 05E7  
                                 l142 0410                                   l218 029E  
                                 l164 0522                                   l167 066A  
                                 l192 0371                                   l187 0334  
                                 l196 0383                                   l199 065D  
                                 _GIE 005F                                   _RA4 002C  
                                 _RA5 002D                         ?_display_init 0070  
                                 _RB7 0037                                   _RC7 003F  
                                 _ISR 055F                                   u810 0541  
                                 u811 0540                                   u820 055E  
                                 u821 055D                                   u920 039E  
                                 u921 039D                                   u825 055A  
                                 u930 03A5                                   u931 03A4  
                                 u940 03AC                                   u941 03AB  
                                 u950 03B2                                   u951 03B1  
                                 u960 03D1                                   u961 03D0  
                                 u970 03E4                                   u971 03E3  
                                 u980 03EB                                   u981 03EA  
                                 u990 03F2                                   u991 03F1  
                                 fsr0 0004                                   indf 0000  
                         _stepper_set 02A9                       ?_verifica_senha 0070  
                                ?_ISR 0070                                  l1411 0642  
                                l1501 0398                                  l1413 0648  
                                l1511 03AC                                  l1503 039E  
                                l1415 0649                                  l1521 03B5  
                                l1513 03B2                                  l1505 03A0  
                                l1433 052A                                  l1425 0526  
                                l1601 04F0                                  l1531 03DA  
                                l1523 03CA                                  l1515 03B3  
                                l1507 03A5                                  l1435 0537  
                                l1427 0529                                  l1611 0503  
                                l1603 04F2                                  l1541 03EC  
                                l1525 03CC                                  l1509 03A6  
                                l1533 03DE                                  l1437 053B  
                                l1621 0517                                  l1551 03FA  
                                l1543 03F2                                  l1535 03E4  
                                l1527 03D1                                  l1439 0541  
                                l1631 02A9                                  l1623 051B  
                                l1607 04F8                                  l1393 0673  
                                l1553 0405                                  l1545 03F7  
                                l1537 03E6                                  l1529 03D5  
                                l1641 0318                                  l1633 02AA  
                                l1625 0521                                  l1617 0506  
                                l1609 04FE                                  l1561 049D  
                                l1801 011F                                  l1555 0409  
                                l1491 0388                                  l1651 033D  
                                l1643 0325                                  l1635 02F6  
                                l1619 0515                                  l1571 04AD  
                                l1563 04A1                                  l1811 0153  
                                l1803 012C                                  l1557 040F  
                                l1629 065E                                  l1653 034A  
                                l1645 032B                                  l1637 0303  
                                l1661 037B                                  l1581 04BF  
                                l1573 04B1                                  l1821 016B  
                                l1813 0156                                  l1805 0136  
                                l1901 029E                                  l1741 0063  
                                l1733 0051                                  l1655 0353  
                                l1647 0330                                  l1639 030E  
                                l1671 065C                                  l1663 0651  
                                l1591 04D8                                  l1575 04B7  
                                l1823 0170                                  l1807 0140  
                                l1831 0184                                  l1751 0072  
                                l1743 0063                                  l1735 0056  
                                l1497 0389                                  l1489 0384  
                                l1657 035B                                  l1649 0339  
                                l1665 0655                                  l1593 04DD  
                                l1577 04B9                                  l1569 04A2  
                                l1841 01AB                                  l1833 018A  
                                l1825 017E                                  l1809 0145  
                                l1817 0159                                  l1761 009B  
                                l1753 0078                                  l1745 0069  
                                l1737 005B                                  l1499 0394  
                                l1659 035E                                  l1667 0657  
                                l1595 04E1                                  l1587 04C1  
                                l1579 04BE                                  l1851 01D5  
                                l1843 01AC                                  l1827 0181  
                                l1819 0161                                  l1835 0193  
                                l1771 00AD                                  l1763 009D  
                                l1755 007B                                  l1747 006A  
                                l1739 0060                                  l1669 065B  
                                l1597 04E6                                  l1589 04D6  
                                l1861 01F4                                  l1845 01B8  
                                l1853 01D8                                  l1837 0198  
                                l1781 00D7                                  l1773 00B2  
                                l1765 00A3                                  l1757 0094  
                                l1749 0070                                  l1599 04EA  
                                l1871 0219                                  l1863 01FC  
                                l1855 01DF                                  l1847 01C0  
                                l1839 01A6                                  l1791 00FD  
                                l1783 00E1                                  l1775 00C0  
                                l1759 0095                                  l1767 00A5  
                                l1873 023B                                  l1865 0201  
                                l1857 01E8                                  l1849 01CA  
                                l1793 0106                                  l1785 00EC  
                                l1777 00C3                                  l1769 00AA  
                                l1891 0289                                  l1875 0240  
                                l1867 0208                                  l1883 0254  
                                l1859 01ED                                  l1795 010B  
                                l1787 00F1                                  l1779 00CF  
                                l1893 028C                                  l1885 026C  
                                l1877 024E                                  l1869 0215  
                                l1797 0113                                  l1789 00F6  
                      ?_display_digit 0070                                  l1887 0276  
                                l1879 0251                                  l1799 0118  
                                l1889 027B                                  l1897 028F  
                                l1899 0294                                  u1000 040F  
                                u1001 040E                                  u1010 04B7  
                                u1011 04B6                                  u1020 04BE  
                                u1021 04BD                                  u1110 02CD  
                                u1030 04DD                                  u1111 02C9  
                                u1031 04DC                                  u1200 034A  
                                u1104 02BD                                  u1040 04F0  
                                u1201 0349                                  u1041 04EF  
                                u1210 037B                                  u1130 02E0  
                                u1050 04F7                                  u1211 037A  
                                u1131 02DC                                  u1051 04F6  
                                u1220 0383                                  u1124 02D0  
                                u1060 04FE                                  u1300 0070  
                                u1221 0382                                  u1205 0346  
                                u1061 04FD                                  u1301 006F  
                                u1150 02F3                                  u1070 0515  
                                u1310 0078                                  u1215 0377  
                                u1151 02EF                                  u1071 0514  
                                u1311 0077                                  u1144 02E3  
                                u1080 0521                                  u1400 011F  
                                u1320 0094                                  u1081 0520  
                                u1401 011E                                  u1321 0093  
                                u1170 0303                                  u1090 02BA  
                                u1410 018A                                  u1330 009B  
                                u1171 0302                                  u1091 02B6  
                                u1411 0189                                  u1331 009A  
                                u1180 0325                                  u1164 02F6  
                                u1500 02A5                                  u1420 0193  
                                u1340 00A3                                  u1181 0324  
                                u1501 02A4                                  u1421 0192  
                                u1341 00A2                                  u1190 032B  
                                u1430 01D5                                  u1350 00AA  
                                u1191 032A                                  u1175 02FF  
                                u1431 01D4                                  u1351 00A9  
                                u1440 01DF                                  u1360 00EC  
                                u1185 0321                                  u1441 01DE  
                                u1361 00EB                                  u1450 01E8  
                                u1370 00FD                                  u1451 01E7  
                                u1371 00FC                                  u1460 01F4  
                                u1380 0106                                  u1461 01F3  
                                u1381 0105                                  u1517 0083  
                                u1470 0208                                  u1390 010B  
                                u1607 0364                                  u1471 0207  
                                u1391 010A                                  u1527 00BA  
                                u1480 0294                                  u1617 0547  
                                u1481 0293                                  u1537 00C9  
                                u1490 029D                                  u1491 029C  
                                u1547 014D                                  u1557 0178  
                                u1567 01A0                                  u1577 01B2  
                                u1587 0248                                  u1597 0283  
                                i1l72 0603                                  i1l65 05D7  
                                i1l66 05E6                                  _TMR0 0001  
             __end_of_display_message 055F                                  _main 0051  
                                btemp 007E                           main@timeout 0048  
                                start 0010                     ___bmul@multiplier 0072  
                 _current_key_pressed 005D                                 ??_ISR 0076  
          display_message@duration_ms 0020                __end_of_update_display 0604  
                        _stepper_init 065E                       __end_of_t0_init 065E  
                      ??_display_init 0020                                 ?_main 0070  
           ?_capture_user_input_senha 0070                                 i1l100 0483  
                               i1l105 049C                                 i1l208 058E  
                               i1l381 062E                                 _PORTA 0005  
                               _PORTB 0006                                 _PORTC 0007  
                               u80_20 05F4                                 u80_21 05F3  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISC 0087                                 u90_20 048E  
                               u90_21 048D                                 u91_20 0497  
                               u91_21 0496                                 u83_24 041B  
                               u83_25 0419                                 u76_20 05CB  
                               u76_21 05CA                                 u84_24 0430  
                               u84_25 042E                                 u85_20 043B  
                               u85_21 043A                                 u77_24 05E1  
                               u77_25 05DF                                 u78_20 0620  
                               u86_20 0452                                 u78_21 061F  
                               u86_21 0451                                 u79_20 062D  
                               u87_20 045F                                 u79_21 062C  
                               u87_21 045E                                 u88_20 046D  
                               u88_21 046C                                 u89_20 047E  
                               u89_21 047D                  main@senha_valida_169 0046  
                     __end_of_key_map 05BE                                 pclath 000A  
                               status 0003                                 wtemp0 007E  
                     __initialization 0013                          __end_of_main 02A9  
capture_user_input_senha@senha_valida 0024                       ?_update_display 0070  
       capture_user_input_senha@i_115 0027         capture_user_input_senha@index 0025  
                              ??_main 002A         capture_user_input_senha@senha 0020  
                     ??_display_digit 0071                                i1l1401 0624  
                              i1l1403 0626                                i1l1405 0628  
                              i1l1421 05F4                                i1l1407 062D  
                              i1l1423 05FF                                i1l1441 0411  
                              i1l1417 05E7                                i1l1443 0415  
                              i1l1419 05EB                                i1l1461 0457  
                              i1l1453 0428                                i1l1445 0423  
                              i1l1471 046D                                i1l1463 045A  
                              i1l1455 043B                                i1l1447 0427  
                              i1l1391 05DB                                i1l1481 048E  
                              i1l1473 047E                                i1l1465 045F  
                              i1l1457 044C                                i1l1385 05C5  
                              i1l1721 0574                                i1l1713 055F  
                              i1l1395 061B                                i1l1483 0497  
                              i1l1467 0465                                i1l1459 0452  
                              i1l1387 05CB                                i1l1731 058C  
                              i1l1723 057C                                i1l1715 0563  
                              i1l1397 061C                                i1l1485 0499  
                              i1l1469 0468                                i1l1477 0484  
                              i1l1389 05D5                                i1l1725 0581  
                              i1l1717 0567                                i1l1399 0620  
                              i1l1487 049B                                i1l1479 0488  
                              i1l1727 0585                                i1l1719 056F  
                              i1l1729 058B                                u127_20 0563  
                              u127_21 0562                                u128_20 0567  
                              u128_21 0566                                u129_20 057C  
                              u129_21 057B                                u162_27 0425  
                    ?_display_message 0020                                _TMR0IE 005D  
                              _TMR0IF 005A                                _TRISA4 042C  
                              _TRISA5 042D                                _TRISB7 0437  
                              _TRISC7 043F                 __end_of_clear_display 0678  
    get_key_combined@debounce_counter 0067                     stepper_set@states 05BE  
          verifica_senha@senha_valida 0025                             ??_t0_init 0020  
                              ___bmul 061A                                main@on 002D  
                        __pdataCOMMON 007D                                saved_w 007E  
             __end_of__initialization 004D             __end_ofstepper_set@states 05C2  
                __end_of_display_init 0651                   ___bmul@multiplicand 0070  
                      __pcstackCOMMON 0070                          __pidataBANK0 0604  
                        __pidataBANK1 066B                          stepper_set@i 0065  
                        stepper_set@j 0028                      ??_verifica_senha 0020  
                      _OPTION_REGbits 0081                          ?_stepper_set 0020  
                          __pbssBANK0 005F                            __pbssBANK1 00A8  
                          __pmaintext 0051      __end_ofdisplay_digit@segment_map 05B2  
                             ?___bmul 0070                            __pintentry 0004  
                  display_digit@digit 0073                        main@hold_flag1 0047  
           display_digit@segment_code 0072                            __stringtab 0599  
                    ??_update_display 0074                            _hold_flag2 006B  
    get_key_combined@last_key_pressed 007D                               _t0_init 0651  
                    _get_key_combined 0411                               __ptext1 049D  
                             __ptext2 0651                               __ptext3 02A9  
                             __ptext4 065E                               __ptext5 0523  
                             __ptext6 0642                               __ptext7 0384  
                             __ptext8 0673                               __ptext9 055F  
                             _key_map 05B2          update_display@digit_position 007B  
                end_of_initialization 004D              _capture_user_input_senha 0384  
                        _display_init 0642                 __end_of_display_digit 05E7  
                          main@inicio 0039                            _user_input 005F  
                      __end_of___bmul 062F                         __pidataCOMMON 0678  
                stepper_set@step_time 0022                   start_initialization 0013  
                         __end_of_ISR 0599                          _hold_counter 0069  
          __end_ofmain@hold_threshold 05C4                      stepper_set@steps 0020  
                     _stepper_set$129 0026                              ??___bmul 0071  
                          init_fetch0 062F                         ?_stepper_init 0070  
      get_key_combined@debounce_state 007A                           __pdataBANK0 0049  
                         __pdataBANK1 00A0                           __pbssCOMMON 007A  
                           ___latbits 0002                         __pcstackBANK0 0020  
            __end_of_get_key_combined 049D                display_message@message 0026  
                       _clear_display 0673                              ISR@tick1 0063  
                            ?_t0_init 0070                        ??_stepper_init 0020  
                           __pstrings 0599                     ??_display_message 0022  
                 verifica_senha@i_122 0028                      main@senha_valida 0045  
                 verifica_senha@index 0026                   verifica_senha@senha 0021  
                           _key_ready 006C                     interrupt_function 0004  
          ??_capture_user_input_senha 0020                        ?_clear_display 0070  
                     verifica_senha@i 0027                       verifica_senha@j 0029  
                           main@F1381 0049                             main@F1375 0051  
                           main@F1392 00A0                             main@F1386 00A8  
                           main@F1378 004D                             main@F1389 00A4  
           capture_user_input_senha@i 0026             capture_user_input_senha@j 0028  
                         __stringbase 059E                             main@error 0035  
                 get_key_combined@col 0075                   get_key_combined@row 007C  
                  __end_of__stringtab 059F                           _key_pressed 005E  
                       ??_stepper_set 0024                              __ptext10 05E7  
                            __ptext11 05C4                              __ptext12 0411  
                            __ptext13 061A                  __end_of_stepper_init 066B  
                     ??_clear_display 0020                              _password 0059  
               display_digit@position 0070                              main@cLSE 003D  
                            main@Open 0031                              main@erro 0041  
                    display_message@i 0027                    main@hold_threshold 05C2  
            display_digit@segment_map 059F                              init_ram0 0633  
         get_key_combined@current_key 0074                     ?_get_key_combined 0070  
                            intlevel1 0000                        _verifica_senha 049D  
    __end_of_capture_user_input_senha 0411                    ??_get_key_combined 0073  
                 __end_of_stepper_set 0384                             stringcode 0599  
                     _display_message 0523           display_message@elapsed_time 0024  
                      _display_digits 0055                              stringdir 0599  
                            stringtab 0599                __end_of_verifica_senha 0523  
                       _display_digit 05C4  
